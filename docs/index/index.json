{
  "includedArchiveIdentifiers" : [
    "com.artemnovichkov.Horoscope"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/horoscope",
                "title" : "var horoscope: Horoscope.PartiallyGenerated?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.property",
                "title" : "var overlayState: OverlayState",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/settingsopened",
                "title" : "var settingsOpened: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/generate(username:)",
                "title" : "func generate(username: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/horoscope\/contentviewmodel\/onappear(username:)",
                "title" : "func onAppear(username: String?)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/error(_:)",
                    "title" : "case error(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/loading",
                    "title" : "case loading",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/normal",
                    "title" : "case normal",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/unavailable(reason:)",
                    "title" : "case unavailable(reason: SystemLanguageModel.Availability.UnavailableReason)",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/horoscope\/contentviewmodel\/overlaystate-swift.enum",
                "title" : "ContentViewModel.OverlayState",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/horoscope\/contentviewmodel",
            "title" : "ContentViewModel",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/init(username:)",
                    "title" : "init(username: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/username",
                    "title" : "let username: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/init(_:)",
                        "title" : "init(FoundationModels.GeneratedContent) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/convertiblefromgeneratedcontent-implementations",
                    "title" : "ConvertibleFromGeneratedContent Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/instructionsrepresentation",
                        "title" : "var instructionsRepresentation: Instructions",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/promptrepresentation",
                        "title" : "var promptRepresentation: Prompt",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/convertibletogeneratedcontent-implementations",
                    "title" : "ConvertibleToGeneratedContent Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/aspartiallygenerated()",
                        "title" : "func asPartiallyGenerated() -> Self.PartiallyGenerated",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/partiallygenerated",
                        "title" : "GithubInfoTool.Arguments.PartiallyGenerated",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/arguments\/generable-implementations",
                    "title" : "Generable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/horoscope\/githubinfotool\/arguments",
                "title" : "GithubInfoTool.Arguments",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/githubinfotool\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/githubinfotool\/description",
                "title" : "let description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/githubinfotool\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/githubinfotool\/call(arguments:)",
                "title" : "func call(arguments: Arguments) async throws -> GeneratedContent",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/emptyusername",
                    "title" : "case emptyUsername",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/errordescription",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/horoscope\/githubinfotool\/toolerror",
                "title" : "GithubInfoTool.ToolError",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/includesschemaininstructions",
                    "title" : "var includesSchemaInInstructions: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/githubinfotool\/parameters",
                    "title" : "var parameters: GenerationSchema",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/githubinfotool\/tool-implementations",
                "title" : "Tool Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/githubinfotool",
            "title" : "GithubInfoTool",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/username",
                "title" : "var username: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/perform()",
                "title" : "func perform() async throws -> some IntentResult & ShowsSnippetView",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/description",
                "title" : "static var description: IntentDescription",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/parametersummary",
                "title" : "static var parameterSummary: some ParameterSummary",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeintent\/title",
                "title" : "static var title: LocalizedStringResource",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/systemcontext",
                    "title" : "var systemContext: IntentSystemContext",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/callasfunction(donate:)-5u64o",
                    "title" : "func callAsFunction(donate: Bool) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/callasfunction(donate:)-7ejka",
                    "title" : "func callAsFunction(donate: Bool) async throws -> Self.PerformResult.Value",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/continueinforeground(_:alwaysconfirm:)",
                    "title" : "func continueInForeground(IntentDialog?, alwaysConfirm: Bool) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/donate()",
                    "title" : "func donate() -> IntentDonationIdentifier",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/donate(result:)-5ogk5",
                    "title" : "func donate(result: some IntentResult) async throws -> IntentDonationIdentifier",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/donate(result:)-9u8nj",
                    "title" : "func donate(result: some IntentResult) -> IntentDonationIdentifier",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/needstocontinueinforegrounderror(_:alwaysconfirm:)",
                    "title" : "func needsToContinueInForegroundError(IntentDialog?, alwaysConfirm: Bool) -> AppIntentError",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestchoice(between:dialog:)",
                    "title" : "func requestChoice(between: [IntentChoiceOption], dialog: IntentDialog?) async throws -> IntentChoiceOption",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestchoice(between:dialog:content:)",
                    "title" : "func requestChoice<Content>(between: [IntentChoiceOption], dialog: IntentDialog?, content: () -> Content) async throws -> IntentChoiceOption",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestchoice(between:dialog:view:)",
                    "title" : "func requestChoice<Content>(between: [IntentChoiceOption], dialog: IntentDialog?, view: Content) async throws -> IntentChoiceOption",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation()",
                    "title" : "func requestConfirmation() async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(conditions:actionname:dialog:)",
                    "title" : "func requestConfirmation(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(conditions:actionname:dialog:showdialogasprompt:content:)",
                    "title" : "func requestConfirmation<Content>(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog?, showDialogAsPrompt: Bool, content: () -> Content) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(conditions:actionname:dialog:showdialogasprompt:snippetintent:)-1p2h1",
                    "title" : "func requestConfirmation<Snippet>(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog?, showDialogAsPrompt: Bool, snippetIntent: Snippet) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(conditions:actionname:dialog:showdialogasprompt:snippetintent:)-7ws81",
                    "title" : "func requestConfirmation<Snippet>(conditions: ConfirmationConditions, actionName: ConfirmationActionName, dialog: IntentDialog?, showDialogAsPrompt: Bool, snippetIntent: Snippet) async throws -> Snippet.PerformResult.Value",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(output:confirmationactionname:showprompt:)",
                    "title" : "func requestConfirmation<Result>(output: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/requestconfirmation(result:confirmationactionname:showprompt:)",
                    "title" : "func requestConfirmation<Result>(result: Result, confirmationActionName: ConfirmationActionName, showPrompt: Bool) async throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/case",
                    "title" : "HoroscopeIntent.Case",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/defaultcase",
                    "title" : "HoroscopeIntent.DefaultCase",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/option",
                    "title" : "HoroscopeIntent.Option",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/parameter",
                    "title" : "HoroscopeIntent.Parameter",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/summary",
                    "title" : "HoroscopeIntent.Summary",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/switch",
                    "title" : "HoroscopeIntent.Switch",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/when",
                    "title" : "HoroscopeIntent.When",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/authenticationpolicy",
                    "title" : "static var authenticationPolicy: IntentAuthenticationPolicy",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/description-3g73i",
                    "title" : "static var description: IntentDescription?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/isdiscoverable",
                    "title" : "static var isDiscoverable: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/openappwhenrun",
                    "title" : "static var openAppWhenRun: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/parametersummary-gyyu",
                    "title" : "static var parameterSummary: some ParameterSummary",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/persistentidentifier-mym6",
                    "title" : "static var persistentIdentifier: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/supportedmodes",
                    "title" : "static var supportedModes: IntentModes",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopeintent\/appintent-implementations",
                "title" : "AppIntent Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeintent\/persistentidentifier-16hmq",
                    "title" : "static var persistentIdentifier: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopeintent\/persistentlyidentifiable-implementations",
                "title" : "PersistentlyIdentifiable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopeintent",
            "title" : "HoroscopeIntent",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeservice\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeservice\/horoscope(username:)",
                "title" : "func horoscope(username: String) async throws -> Horoscope",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeservice\/horoscopestream(username:)",
                "title" : "func horoscopeStream(username: String) -> LanguageModelSession.ResponseStream<Horoscope>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeservice\/prewarm(username:)",
                "title" : "func prewarm(username: String?)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopeservice",
            "title" : "HoroscopeService",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/appshortcuts",
                "title" : "static var appShortcuts: [AppShortcut]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/optionscollection",
                    "title" : "HoroscopeShortcutProvider.OptionsCollection",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/parameterpresentation",
                    "title" : "HoroscopeShortcutProvider.ParameterPresentation",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/summary",
                    "title" : "HoroscopeShortcutProvider.Summary",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/title",
                    "title" : "HoroscopeShortcutProvider.Title",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/negativephrases",
                    "title" : "static var negativePhrases: NegativeAppShortcutPhrases",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/shortcuttilecolor",
                    "title" : "static var shortcutTileColor: ShortcutTileColor",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/updateappshortcutparameters()",
                    "title" : "static func updateAppShortcutParameters()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider\/appshortcutsprovider-implementations",
                "title" : "AppShortcutsProvider Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopeshortcutprovider",
            "title" : "HoroscopeShortcutProvider",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/authorizationstatus",
                "title" : "var authorizationStatus: UNAuthorizationStatus?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/notificationtime",
                "title" : "var notificationTime: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/notificationsenabled",
                "title" : "var notificationsEnabled: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/onappear()",
                "title" : "func onAppear()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsviewmodel\/ondisappear()",
                "title" : "func onDisappear()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/horoscope\/settingsviewmodel",
            "title" : "SettingsViewModel",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/init()",
                    "title" : "init()",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/init(_:)",
                        "title" : "init(FoundationModels.GeneratedContent) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/convertiblefromgeneratedcontent-implementations",
                    "title" : "ConvertibleFromGeneratedContent Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/instructionsrepresentation",
                        "title" : "var instructionsRepresentation: Instructions",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/promptrepresentation",
                        "title" : "var promptRepresentation: Prompt",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/convertibletogeneratedcontent-implementations",
                    "title" : "ConvertibleToGeneratedContent Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/aspartiallygenerated()",
                        "title" : "func asPartiallyGenerated() -> Self.PartiallyGenerated",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/partiallygenerated",
                        "title" : "UserInfoTool.Arguments.PartiallyGenerated",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/arguments\/generable-implementations",
                    "title" : "Generable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/horoscope\/userinfotool\/arguments",
                "title" : "UserInfoTool.Arguments",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/userinfotool\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/userinfotool\/description",
                "title" : "let description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/userinfotool\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/userinfotool\/call(arguments:)",
                "title" : "func call(arguments: Arguments) async throws -> GeneratedContent",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/userinfotool\/error\/healthdatanotavailable",
                    "title" : "case healthDataNotAvailable",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/userinfotool\/error\/errordescription",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/error\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/error\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/error\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/error\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/error\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/error\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/horoscope\/userinfotool\/error\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/horoscope\/userinfotool\/error\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/horoscope\/userinfotool\/error",
                "title" : "UserInfoTool.Error",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/userinfotool\/includesschemaininstructions",
                    "title" : "var includesSchemaInInstructions: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/userinfotool\/parameters",
                    "title" : "var parameters: GenerationSchema",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/userinfotool\/tool-implementations",
                "title" : "Tool Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/userinfotool",
            "title" : "UserInfoTool",
            "type" : "class"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/contentview\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/contentview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(activationpoint:)-1ivt1",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(activationpoint:)-1pd0",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(_:intent:)",
                    "title" : "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(intent:label:)",
                    "title" : "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:_:)-2cqjn",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:_:)-3tlhv",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:_:)-7trbn",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:_:)-93pgz",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:intent:)-40mmk",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:intent:)-5hkqu",
                    "title" : "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:intent:)-7k8oo",
                    "title" : "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaction(named:intent:)-8vfmq",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringResource, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactivationpoint(_:)-9xt47",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactivationpoint(_:)-nwyp",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactivationpoint(_:isenabled:)-6getc",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityactivationpoint(_:isenabled:)-8k9gr",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-27mfd",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-3clo5",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-4ccrf",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-4cx7t",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-4d1c2",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-56iv8",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-5oxrl",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-5y0ow",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-7qgn9",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-7tz3c",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-8160c",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitycustomcontent(_:_:importance:)-9t0jj",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:)-5gwq",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:)-5lz1e",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:)-92hvj",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:)-9i6iu",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:isenabled:)-3t89",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:isenabled:)-3uvch",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:isenabled:)-5sjyi",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydragpoint(_:description:isenabled:)-9nrei",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:)-18vdd",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:)-296dv",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:)-9ox",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:)-9ubdc",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:isenabled:)-93s0g",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:isenabled:)-hmxi",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:isenabled:)-jsgc",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitydroppoint(_:description:isenabled:)-v3qc",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:)-1jp19",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:)-1li7n",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:)-779r",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:)-882lr",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:isenabled:)-51pnn",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:isenabled:)-71gvg",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:isenabled:)-7vqu0",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityhint(_:isenabled:)-8ffvy",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:)-4hbmh",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:)-5o97j",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:)-8g4bt",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:isenabled:)-4711z",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:isenabled:)-7f7a3",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityinputlabels(_:isenabled:)-9wgty",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:)-1mtye",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:)-2lyur",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:)-2qj18",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:)-91avb",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:isenabled:)-3ix7j",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:isenabled:)-4jl9c",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:isenabled:)-58c0x",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(_:isenabled:)-5rlll",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:)-18vmn",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:)-1gpp8",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:)-1necc",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:)-28yj2",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:)-7mxg2",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3akkx",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4cqoq",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-55gzh",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-6rbq0",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entryid:entrylabel:)-91pp6",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entrylabel:)-1jv7d",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entrylabel:)-1ldy0",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entrylabel:)-4mb8f",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entrylabel:)-4wah",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:entries:entrylabel:)-9eftz",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:textranges:)-2wgiy",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:textranges:)-39r06",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:textranges:)-3ogj",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:textranges:)-5dmnz",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotor(_:textranges:)-86say",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityscrollstatus(_:isenabled:)-4oxd4",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityscrollstatus(_:isenabled:)-5yai6",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityscrollstatus(_:isenabled:)-7488t",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityscrollstatus(_:isenabled:)-9i6n3",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:)-1mxio",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:)-5w6e",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:)-66wsz",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:)-6q8xe",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:isenabled:)-103c8",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:isenabled:)-2f0n0",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:isenabled:)-99bec",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityvalue(_:isenabled:)-iyp3",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:)-19gfg",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:)-26qd4",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:)-8pc7c",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:)-gc17",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:message:)-3vpsf",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:message:)-4foau",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:message:)-6fb8m",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:actions:message:)-f4im",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:)-1jkrb",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:)-25lvw",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:)-3cz9x",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:)-4fvrq",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:message:)-18ttv",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:message:)-4y1on",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:message:)-9ppko",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(_:ispresented:presenting:actions:message:)-yyu3",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alignmentguide(_:computevalue:)-7bnzg",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alignmentguide(_:computevalue:)-8tqyl",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/aspectratio(_:contentmode:)-739c2",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/aspectratio(_:contentmode:)-9r9l2",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/attributedtextformattingdefinition(_:)-5f5u2",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/attributedtextformattingdefinition(_:)-6clqr",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/attributedtextformattingdefinition(_:)-8907p",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(_:in:fillstyle:)-66xfj",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(_:in:fillstyle:)-682jp",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(in:fillstyle:)-2cy2c",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/background(in:fillstyle:)-6z553",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badge(_:)-1owkz",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badge(_:)-33lye",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badge(_:)-34jg8",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badge(_:)-656yw",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badge(_:)-85m5k",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/buttonstyle(_:)-5i9qj",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/buttonstyle(_:)-qrt2",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3s6q0",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5k72v",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6can1",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-857q1",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-3n616",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4f5dn",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-4y5vr",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-m5al",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2vgma",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4jksd",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5ox8u",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6m7qz",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-17slk",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3npwe",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-8alhj",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-ua0e",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containershape(_:)-417a0",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containershape(_:)-8ko6u",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contentmargins(_:_:for:)-12iun",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contentmargins(_:_:for:)-20qb1",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contenttoolbar(for:content:)-6a7nc",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contenttoolbar(for:content:)-6i0kd",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaultadaptabletabbarplacement(_:)",
                    "title" : "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-2ob1h",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-3o1nw",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-7jcem",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogsuppressiontoggle(_:issuppressed:)-7od9h",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/documentbrowsercontextmenu(_:)",
                    "title" : "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dragcontainer(for:id:in:_:)",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dragcontainer(for:id:in:selection:_:)-4k1s0",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (consuming Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> Array<ItemID>, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dragcontainer(for:id:in:selection:_:)-5fagf",
                    "title" : "func dragContainer<Item, ItemID>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> ItemID?, (ItemID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dragcontainer(for:in:selection:_:)-2otte",
                    "title" : "func dragContainer<Item>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Item.ID?, (Item.ID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dragcontainer(for:in:selection:_:)-7a58e",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Array<Item.ID>, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/draggable(for:id:_:)",
                    "title" : "func draggable<T, ID>(for: T.Type, id: ID, (ID) -> T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogconfirmationlabel(_:)-66zrq",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogconfirmationlabel(_:)-6tjnu",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogconfirmationlabel(_:)-87lb8",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogconfirmationlabel(_:)-8ynsq",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogmessage(_:)-1ul5k",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogmessage(_:)-68pb3",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogmessage(_:)-70a6y",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogmessage(_:)-likv",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-5djnt",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-o7gk",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-8rp9v",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9xdr7",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2atos",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-4afi7",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3xi3q",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-lp0h",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporterfilenamelabel(_:)-7g2cp",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporterfilenamelabel(_:)-8gyvu",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporterfilenamelabel(_:)-i99z",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileexporterfilenamelabel(_:)-k0a7",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedobject(_:)-44qtq",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedobject(_:)-6wci2",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedsceneobject(_:)-7flsp",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedsceneobject(_:)-9a63k",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedscenevalue(_:_:)-539ke",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedscenevalue(_:_:)-9b7xj",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedvalue(_:_:)-745o0",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/focusedvalue(_:_:)-8miq1",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gesture(_:)",
                    "title" : "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/help(_:)-2funm",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/help(_:)-5dtnr",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/help(_:)-6s216",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/help(_:)-7txsx",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyboardshortcut(_:)-3eq9d",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyboardshortcut(_:)-4zo2y",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linelimit(_:)-5cc8n",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linelimit(_:)-7k1sy",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linelimit(_:)-9cfvb",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linelimit(_:)-9iun6",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listitemtint(_:)-1vvqy",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listitemtint(_:)-7dpyh",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionindexvisibility(_:)",
                    "title" : "func listSectionIndexVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionmargins(_:_:)",
                    "title" : "func listSectionMargins(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionspacing(_:)-3bl27",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/listsectionspacing(_:)-97n9k",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:)-1bwz5",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:)-1c223",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:)-1tiz1",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:displaymode:)-3yl0o",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:displaymode:)-8g4ov",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitle(_:displaymode:)-9ys8r",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdocument(_:preview:)-14bjf",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdocument(_:preview:)-44vbf",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdocument(_:preview:)-781wg",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationdocument(_:preview:)-9diq7",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsubtitle(_:)-54fko",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsubtitle(_:)-6u8xf",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsubtitle(_:)-8370w",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationsubtitle(_:)-8ecf5",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-29ikc",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-2b3us",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-4nqyg",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-4t4lt",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-5lkgs",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtitle(_:)-8o3o0",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onappintentexecution(_:perform:)",
                    "title" : "func onAppIntentExecution<I>(I.Type, perform: (I) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onchange(of:initial:_:)-19bek",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onchange(of:initial:_:)-fmr5",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:delegate:)-434vq",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:delegate:)-46e1e",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:istargeted:perform:)-35rn9",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:istargeted:perform:)-4gte2",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:istargeted:perform:)-5uurk",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/ondrop(of:istargeted:perform:)-8sahe",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ongeometrychange(for:of:action:)-1skrr",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ongeometrychange(for:of:action:)-id97",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onopenurl(_:)",
                    "title" : "func onOpenURL((URL) -> OpenURLAction.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onscrollphasechange(_:)-13t02",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onscrollphasechange(_:)-3fkgs",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/padding(_:)-73htw",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/padding(_:)-90oka",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(ispresented:attachmentanchor:arrowedge:content:)-1fboa",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(ispresented:attachmentanchor:arrowedge:content:)-2fz4a",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(ispresented:attachmentanchor:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(item:attachmentanchor:arrowedge:content:)-6mhze",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(item:attachmentanchor:arrowedge:content:)-6wvpy",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popover(item:attachmentanchor:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popovertip(_:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/renameaction(_:)-3du5k",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/renameaction(_:)-9ljln",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareabar(edge:alignment:spacing:content:)-2hwuh",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareabar(edge:alignment:spacing:content:)-8wltp",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareainset(edge:alignment:spacing:content:)-3kl3b",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareainset(edge:alignment:spacing:content:)-950pw",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareapadding(_:)-1m1nt",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareapadding(_:)-1shcv",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scaleeffect(_:anchor:)-3x0r6",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scaleeffect(_:anchor:)-9ybe",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-15z8s",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-52ugg",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-71y7b",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9izbr",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-16cns",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-63xxa",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-7w3uo",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:editabletokens:placement:prompt:token:)-c7jv",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:ispresented:placement:prompt:)-1cv5v",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:ispresented:placement:prompt:)-51qht",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:ispresented:placement:prompt:)-5caw0",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:ispresented:placement:prompt:)-clbp",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:)-1hxky",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:)-3p1lq",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:)-5nxgd",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:)-jwls",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:suggestions:)-1rjjr",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:suggestions:)-7cimz",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:placement:prompt:suggestions:)-8moyb",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2rf44",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-54wxd",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7x03m",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:ispresented:placement:prompt:token:)-8fpfr",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:placement:prompt:token:)-2r334",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:placement:prompt:token:)-75v6r",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:placement:prompt:token:)-wftx",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:placement:prompt:token:)-yapb",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-213vi",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3mv6u",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5gev2",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-88qiv",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1i43y",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1tgmu",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4clld",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-v4aj",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sectionindexlabel(_:)",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sensoryfeedback(trigger:_:)-75izk",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sensoryfeedback(trigger:_:)-7xah9",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/shortcutslinkstyle(_:)",
                    "title" : "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/siritipviewstyle(_:)",
                    "title" : "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewbottomaccessory(content:)",
                    "title" : "func tabViewBottomAccessory<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipanchor(_:)",
                    "title" : "func tipAnchor<AnchorID>(AnchorID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipbackground(_:)",
                    "title" : "func tipBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipbackgroundinteraction(_:)",
                    "title" : "func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipcornerradius(_:antialiased:)",
                    "title" : "func tipCornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipimagesize(_:)",
                    "title" : "func tipImageSize(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipimagestyle(_:)",
                    "title" : "func tipImageStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipimagestyle(_:_:)",
                    "title" : "func tipImageStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipimagestyle(_:_:_:)",
                    "title" : "func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tipviewstyle(_:)",
                    "title" : "func tipViewStyle(some TipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbar(content:)-5sc2",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbar(content:)-68wya",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typeselectequivalent(_:)-18u7n",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typeselectequivalent(_:)-5lzlb",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typeselectequivalent(_:)-5rnxe",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typeselectequivalent(_:)-6uglq",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typesettinglanguage(_:isenabled:)-410bf",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/typesettinglanguage(_:isenabled:)-59fya",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/contentview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/contentview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/contentview",
            "title" : "ContentView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscope\/init(sign:message:)",
                "title" : "init(sign: String, message: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscope\/message",
                "title" : "let message: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscope\/sign",
                "title" : "let sign: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/init(_:)",
                    "title" : "init(FoundationModels.GeneratedContent) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscope\/convertiblefromgeneratedcontent-implementations",
                "title" : "ConvertibleFromGeneratedContent Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/instructionsrepresentation",
                    "title" : "var instructionsRepresentation: Instructions",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/promptrepresentation",
                    "title" : "var promptRepresentation: Prompt",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscope\/convertibletogeneratedcontent-implementations",
                "title" : "ConvertibleToGeneratedContent Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscope\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/aspartiallygenerated()",
                    "title" : "func asPartiallyGenerated() -> Self.PartiallyGenerated",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscope\/partiallygenerated",
                    "title" : "Horoscope.PartiallyGenerated",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscope\/generable-implementations",
                "title" : "Generable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscope",
            "title" : "Horoscope",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeapp\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeapp\/body",
                "title" : "var body: some Scene",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeapp\/main()",
                    "title" : "static func main()",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopeapp\/app-implementations",
                "title" : "App Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopeapp",
            "title" : "HoroscopeApp",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopepartialview\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopepartialview\/init(horoscope:)",
                "title" : "init(horoscope: Horoscope.PartiallyGenerated?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopepartialview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopepartialview\/horoscope",
                "title" : "var horoscope: Horoscope.PartiallyGenerated?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(activationpoint:)-2m7u4",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(activationpoint:)-9eama",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(_:intent:)",
                    "title" : "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(intent:label:)",
                    "title" : "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:_:)-2bs9j",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:_:)-2o8fy",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:_:)-5fmzy",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:_:)-622rx",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:intent:)-30x87",
                    "title" : "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:intent:)-4379s",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringResource, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:intent:)-56yuj",
                    "title" : "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaction(named:intent:)-71dja",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactivationpoint(_:)-7xe1p",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactivationpoint(_:)-868y1",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactivationpoint(_:isenabled:)-3i635",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityactivationpoint(_:isenabled:)-6yg40",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-10lrp",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-2rclr",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-2wswt",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-37ryc",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-3c9mr",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-45u2v",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-4d4gl",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-4r3cj",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-5zlo8",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-62adv",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-87069",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitycustomcontent(_:_:importance:)-lho0",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:)-6c0zh",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:)-6dpf5",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:)-6vbx2",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:)-86pk3",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:isenabled:)-20vfk",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:isenabled:)-3ygvu",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:isenabled:)-92x8a",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydragpoint(_:description:isenabled:)-9l01s",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:)-3i6jd",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:)-3mlvj",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:)-625a0",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:)-9ysm",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:isenabled:)-2jg8f",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:isenabled:)-3p5by",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:isenabled:)-8gde0",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitydroppoint(_:description:isenabled:)-dk9l",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:)-1g2q2",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:)-6vxl2",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:)-7mtyj",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:)-f8p0",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:isenabled:)-4oyau",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:isenabled:)-7baka",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:isenabled:)-8xeqe",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityhint(_:isenabled:)-fsf4",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:)-396z6",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:)-3sn31",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:)-6pz70",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:isenabled:)-2br3z",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:isenabled:)-3l0lf",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityinputlabels(_:isenabled:)-3t1c5",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:)-1eq1o",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:)-91ogz",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:)-99goy",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:)-du3h",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:isenabled:)-5hzgj",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:isenabled:)-6g9l1",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:isenabled:)-6gpeu",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(_:isenabled:)-9n292",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:)-1aplm",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:)-4lwkg",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:)-6gzxj",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:)-75abc",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:)-7a79r",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-349ck",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3b5pp",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3zyfl",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-e0l6",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entryid:entrylabel:)-vzhj",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entrylabel:)-2iw77",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entrylabel:)-4klr0",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entrylabel:)-6ho30",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entrylabel:)-6z6ws",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:entries:entrylabel:)-8lgta",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:textranges:)-5qhw6",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:textranges:)-88piq",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:textranges:)-8ibje",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:textranges:)-8ll4z",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotor(_:textranges:)-l6o",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityscrollstatus(_:isenabled:)-2c77u",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityscrollstatus(_:isenabled:)-3ltij",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityscrollstatus(_:isenabled:)-5svdl",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityscrollstatus(_:isenabled:)-8xw8b",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:)-1nw8e",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:)-2ewx",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:)-46mka",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:)-7sm4n",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:isenabled:)-399g6",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:isenabled:)-71bb3",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:isenabled:)-7c7bf",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityvalue(_:isenabled:)-7naav",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:)-1l9dq",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:)-3gj1s",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:)-81xa4",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:)-8d6bk",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:message:)-2bxi0",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:message:)-3kmsb",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:message:)-884q1",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:actions:message:)-9uo1y",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:)-204cz",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:)-2gle",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:)-2jdyc",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:)-7rve",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:message:)-1dltk",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:message:)-4le0l",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:message:)-6l422",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(_:ispresented:presenting:actions:message:)-97jz4",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alignmentguide(_:computevalue:)-5ahi2",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alignmentguide(_:computevalue:)-ot8v",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/aspectratio(_:contentmode:)-et5n",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/aspectratio(_:contentmode:)-t03j",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/attributedtextformattingdefinition(_:)-3ra5r",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/attributedtextformattingdefinition(_:)-5mq4v",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/attributedtextformattingdefinition(_:)-6e6ph",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(_:in:fillstyle:)-327u8",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(_:in:fillstyle:)-6716j",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(in:fillstyle:)-4dhdx",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/background(in:fillstyle:)-5etjh",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badge(_:)-3sjsf",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badge(_:)-46loj",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badge(_:)-4cxa6",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badge(_:)-4qslc",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badge(_:)-7hyzt",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/buttonstyle(_:)-3mzmx",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/buttonstyle(_:)-73kk8",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3ghry",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3n5hu",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3sgyr",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6xcfn",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2j1br",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8jny7",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9k99k",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9qyjb",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-1wg97",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3bnsy",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4cy42",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-4n3tk",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1n1fu",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6pd5g",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7t2dt",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-de7r",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containershape(_:)-3p045",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containershape(_:)-64puk",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contentmargins(_:_:for:)-9hqrl",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contentmargins(_:_:for:)-9lfjy",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contenttoolbar(for:content:)-6bg8v",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contenttoolbar(for:content:)-86pgl",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaultadaptabletabbarplacement(_:)",
                    "title" : "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogsuppressiontoggle(_:issuppressed:)-44myv",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogsuppressiontoggle(_:issuppressed:)-4is13",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogsuppressiontoggle(_:issuppressed:)-4u4t",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogsuppressiontoggle(_:issuppressed:)-59qm6",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/documentbrowsercontextmenu(_:)",
                    "title" : "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dragcontainer(for:id:in:_:)",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dragcontainer(for:id:in:selection:_:)-23oq7",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (consuming Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> Array<ItemID>, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dragcontainer(for:id:in:selection:_:)-7ybbg",
                    "title" : "func dragContainer<Item, ItemID>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> ItemID?, (ItemID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dragcontainer(for:in:selection:_:)-3wv5x",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Array<Item.ID>, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dragcontainer(for:in:selection:_:)-9s5tw",
                    "title" : "func dragContainer<Item>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Item.ID?, (Item.ID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/draggable(for:id:_:)",
                    "title" : "func draggable<T, ID>(for: T.Type, id: ID, (ID) -> T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogconfirmationlabel(_:)-32z5d",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogconfirmationlabel(_:)-3lxta",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogconfirmationlabel(_:)-7lqwf",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogconfirmationlabel(_:)-98xqi",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogmessage(_:)-3y5yz",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogmessage(_:)-4cpyl",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogmessage(_:)-7fjog",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogmessage(_:)-9jyq6",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1j6cg",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-83s04",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-28bkb",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9y7zy",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2444q",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-2nwvw",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-333k3",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8nb5p",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporterfilenamelabel(_:)-1tu0z",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporterfilenamelabel(_:)-6a4oz",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporterfilenamelabel(_:)-7evhg",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileexporterfilenamelabel(_:)-7hup6",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedobject(_:)-1rbjg",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedobject(_:)-4895k",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedsceneobject(_:)-lz64",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedsceneobject(_:)-ypz8",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedscenevalue(_:_:)-4wkv",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedscenevalue(_:_:)-sjbd",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedvalue(_:_:)-3dmpi",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/focusedvalue(_:_:)-4b5kh",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gesture(_:)",
                    "title" : "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/help(_:)-7shb3",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/help(_:)-9nh9q",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/help(_:)-ucme",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/help(_:)-vvy",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyboardshortcut(_:)-29zay",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyboardshortcut(_:)-9jds0",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linelimit(_:)-346kf",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linelimit(_:)-648my",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linelimit(_:)-794sx",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linelimit(_:)-7bmip",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listitemtint(_:)-872sb",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listitemtint(_:)-9l4qf",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionindexvisibility(_:)",
                    "title" : "func listSectionIndexVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionmargins(_:_:)",
                    "title" : "func listSectionMargins(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionspacing(_:)-1ji6i",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/listsectionspacing(_:)-6w5r2",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:)-16dr6",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:)-3h4xf",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:)-9s4cw",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:displaymode:)-1cd2q",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:displaymode:)-4wrep",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitle(_:displaymode:)-syet",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdocument(_:preview:)-1yhw1",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdocument(_:preview:)-2s8n0",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdocument(_:preview:)-4sblp",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationdocument(_:preview:)-8vxec",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsubtitle(_:)-3dsmg",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsubtitle(_:)-3l671",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsubtitle(_:)-86wgz",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationsubtitle(_:)-eej1",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-125r2",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-482ex",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-5e0c5",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-6qxvt",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-7tzkt",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtitle(_:)-yev7",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onappintentexecution(_:perform:)",
                    "title" : "func onAppIntentExecution<I>(I.Type, perform: (I) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onchange(of:initial:_:)-2bndg",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onchange(of:initial:_:)-7dykd",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:delegate:)-8lmli",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:delegate:)-xfjf",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:istargeted:perform:)-4q7ix",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:istargeted:perform:)-6caaw",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:istargeted:perform:)-8ssy9",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ondrop(of:istargeted:perform:)-9i5fg",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ongeometrychange(for:of:action:)-224nw",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ongeometrychange(for:of:action:)-3b954",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onopenurl(_:)",
                    "title" : "func onOpenURL((URL) -> OpenURLAction.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onscrollphasechange(_:)-210qi",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onscrollphasechange(_:)-6y5wp",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/padding(_:)-2t3y",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/padding(_:)-6ewhf",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(ispresented:attachmentanchor:arrowedge:content:)-3xene",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(ispresented:attachmentanchor:arrowedge:content:)-8rqma",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(ispresented:attachmentanchor:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(item:attachmentanchor:arrowedge:content:)-7ynij",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(item:attachmentanchor:arrowedge:content:)-9h602",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popover(item:attachmentanchor:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popovertip(_:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/renameaction(_:)-33d2t",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/renameaction(_:)-3refv",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareabar(edge:alignment:spacing:content:)-3jism",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareabar(edge:alignment:spacing:content:)-8bgpt",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareainset(edge:alignment:spacing:content:)-7hmvk",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareainset(edge:alignment:spacing:content:)-7nzar",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareapadding(_:)-44m9q",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareapadding(_:)-709hy",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scaleeffect(_:anchor:)-29b5h",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scaleeffect(_:anchor:)-49j8d",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5qdfn",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-78vcg",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8h3mc",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9sqcz",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:placement:prompt:token:)-4f99x",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:placement:prompt:token:)-5v7fm",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:placement:prompt:token:)-66fp0",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:editabletokens:placement:prompt:token:)-77k4l",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:ispresented:placement:prompt:)-8elhh",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:ispresented:placement:prompt:)-8qfrb",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:ispresented:placement:prompt:)-987gi",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:ispresented:placement:prompt:)-9g3yg",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:)-25rbc",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:)-4th9k",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:)-7edqh",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:)-9fjkj",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:suggestions:)-1iatt",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:suggestions:)-1k3it",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:placement:prompt:suggestions:)-85bpe",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-229g2",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-52pw4",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-68tuh",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:ispresented:placement:prompt:token:)-9ivxz",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:placement:prompt:token:)-3eef2",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:placement:prompt:token:)-48w45",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:placement:prompt:token:)-6q8n0",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:placement:prompt:token:)-8wgq7",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3jzuz",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4qcvk",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-5yxjv",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9ak8m",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-29tp7",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-2b82t",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4eqek",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-d8ez",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sectionindexlabel(_:)",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sensoryfeedback(trigger:_:)-2tny2",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sensoryfeedback(trigger:_:)-6dtrp",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/shortcutslinkstyle(_:)",
                    "title" : "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/siritipviewstyle(_:)",
                    "title" : "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewbottomaccessory(content:)",
                    "title" : "func tabViewBottomAccessory<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipanchor(_:)",
                    "title" : "func tipAnchor<AnchorID>(AnchorID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipbackground(_:)",
                    "title" : "func tipBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipbackgroundinteraction(_:)",
                    "title" : "func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipcornerradius(_:antialiased:)",
                    "title" : "func tipCornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipimagesize(_:)",
                    "title" : "func tipImageSize(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipimagestyle(_:)",
                    "title" : "func tipImageStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipimagestyle(_:_:)",
                    "title" : "func tipImageStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipimagestyle(_:_:_:)",
                    "title" : "func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tipviewstyle(_:)",
                    "title" : "func tipViewStyle(some TipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbar(content:)-42gc5",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbar(content:)-5p16a",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typeselectequivalent(_:)-2y9ty",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typeselectequivalent(_:)-4vlyo",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typeselectequivalent(_:)-5uh88",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typeselectequivalent(_:)-he6y",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typesettinglanguage(_:isenabled:)-2bplt",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/typesettinglanguage(_:isenabled:)-82y95",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopepartialview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopepartialview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopepartialview",
            "title" : "HoroscopePartialView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeview\/init(horoscope:)",
                "title" : "init(horoscope: Horoscope)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/horoscopeview\/horoscope",
                "title" : "let horoscope: Horoscope",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(activationpoint:)-2cy1b",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(activationpoint:)-5m3ti",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(_:intent:)",
                    "title" : "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(intent:label:)",
                    "title" : "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:_:)-2q83c",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:_:)-6rsxq",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:_:)-7kj5n",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:_:)-90tuo",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:intent:)-4hwnc",
                    "title" : "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:intent:)-6fakk",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringResource, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:intent:)-7s96v",
                    "title" : "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaction(named:intent:)-8dmtw",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactivationpoint(_:)-4j7jv",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactivationpoint(_:)-4t0rx",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactivationpoint(_:isenabled:)-3z54f",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityactivationpoint(_:isenabled:)-82thu",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-16pxy",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-17aax",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-17nn0",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-1866",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-1f7pi",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-20eec",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-3conx",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-70kmk",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-78cef",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-7c0sl",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-9aoqd",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitycustomcontent(_:_:importance:)-9hqf6",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:)-1szaw",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:)-4chrm",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:)-4y8us",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:)-9zaxt",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:isenabled:)-1doe9",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:isenabled:)-4j90c",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:isenabled:)-59035",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydragpoint(_:description:isenabled:)-eyno",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:)-8i8lj",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:)-9by7g",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:)-9zeqf",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:)-bu48",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:isenabled:)-32hho",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:isenabled:)-3xb31",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:isenabled:)-5n0f7",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitydroppoint(_:description:isenabled:)-9ilxv",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:)-9w33",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:)-czsg",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:)-h55j",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:)-lvi1",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:isenabled:)-2b4ax",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:isenabled:)-4mk7y",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:isenabled:)-8nhxd",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityhint(_:isenabled:)-8v8kf",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:)-4kvi0",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:)-810w1",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:)-9iq7a",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:isenabled:)-49ku6",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:isenabled:)-66x78",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityinputlabels(_:isenabled:)-7n4g1",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:)-33cxp",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:)-5ug9",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:)-8ylht",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:)-hdew",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:isenabled:)-5uctw",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:isenabled:)-6cgnz",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:isenabled:)-75w9e",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(_:isenabled:)-8p3wc",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:)-1brdf",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:)-53rnk",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:)-5gvox",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:)-98p4x",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:)-ip19",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3qj98",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5yeyw",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entryid:entrylabel:)-70ed3",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9ue0n",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entryid:entrylabel:)-lsc1",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entrylabel:)-2wjb8",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entrylabel:)-7smfk",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entrylabel:)-7tgf5",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entrylabel:)-8j7bx",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:entries:entrylabel:)-9yng9",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:textranges:)-2qs31",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:textranges:)-3tnq2",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:textranges:)-52b47",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:textranges:)-8378c",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotor(_:textranges:)-lske",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityscrollstatus(_:isenabled:)-1wlen",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityscrollstatus(_:isenabled:)-5occl",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityscrollstatus(_:isenabled:)-66xiw",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityscrollstatus(_:isenabled:)-8s2au",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:)-1hiry",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:)-1jzrw",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:)-2ejbp",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:)-3ub4m",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:isenabled:)-2ta97",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:isenabled:)-4p45v",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:isenabled:)-4qinb",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityvalue(_:isenabled:)-pfxt",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:)-2ik2n",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:)-2npai",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:)-6txnh",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:)-7y1sh",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:message:)-4xxbr",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:message:)-60zu7",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:message:)-6ykjf",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:actions:message:)-9e32",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:)-1fnz5",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:)-7mxy3",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:)-7rruf",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:)-8msk9",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:message:)-242iz",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:message:)-3jroi",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:message:)-87ntb",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(_:ispresented:presenting:actions:message:)-wpyc",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alignmentguide(_:computevalue:)-231u5",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alignmentguide(_:computevalue:)-66rsy",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/aspectratio(_:contentmode:)-8rc47",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/aspectratio(_:contentmode:)-9so4a",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/attributedtextformattingdefinition(_:)-2ds75",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/attributedtextformattingdefinition(_:)-8gk5m",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/attributedtextformattingdefinition(_:)-8wbvu",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(_:in:fillstyle:)-8mje7",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(_:in:fillstyle:)-96xgo",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(in:fillstyle:)-3kdgn",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/background(in:fillstyle:)-5tai7",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badge(_:)-1k4ps",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badge(_:)-33h2w",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badge(_:)-34zey",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badge(_:)-3ipga",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badge(_:)-gf1n",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/buttonstyle(_:)-2nrnt",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/buttonstyle(_:)-74hxw",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-3mcs5",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5utkz",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6i0bv",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6ozx2",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-16trt",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-321ek",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8c8y3",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8f3a7",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6z2zm",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6zj3i",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9fysz",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9kyhh",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-66ya3",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9rfpo",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-9xcbp",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-ohzt",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containershape(_:)-24szj",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containershape(_:)-4ic57",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contentmargins(_:_:for:)-1b38b",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contentmargins(_:_:for:)-8o2w5",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contenttoolbar(for:content:)-4n7of",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contenttoolbar(for:content:)-6118t",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaultadaptabletabbarplacement(_:)",
                    "title" : "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogsuppressiontoggle(_:issuppressed:)-75flr",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogsuppressiontoggle(_:issuppressed:)-7tq5w",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogsuppressiontoggle(_:issuppressed:)-89xl6",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogsuppressiontoggle(_:issuppressed:)-9gd1q",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/documentbrowsercontextmenu(_:)",
                    "title" : "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dragcontainer(for:id:in:_:)",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dragcontainer(for:id:in:selection:_:)-5rpf",
                    "title" : "func dragContainer<Item, ItemID>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> ItemID?, (ItemID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dragcontainer(for:id:in:selection:_:)-9axyy",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (consuming Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> Array<ItemID>, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dragcontainer(for:in:selection:_:)-44nqz",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Array<Item.ID>, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dragcontainer(for:in:selection:_:)-70bbe",
                    "title" : "func dragContainer<Item>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Item.ID?, (Item.ID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/draggable(for:id:_:)",
                    "title" : "func draggable<T, ID>(for: T.Type, id: ID, (ID) -> T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogconfirmationlabel(_:)-3g45x",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogconfirmationlabel(_:)-3ol46",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogconfirmationlabel(_:)-5wa79",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogconfirmationlabel(_:)-79h4",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogmessage(_:)-261a0",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogmessage(_:)-56t94",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogmessage(_:)-8xkz7",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogmessage(_:)-96kp0",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-1dgdt",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9alnv",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1vyxe",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-2e3zk",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-1vglv",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-6c5nu",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-2bxrs",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-3kcf7",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporterfilenamelabel(_:)-2pjv3",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporterfilenamelabel(_:)-424qx",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporterfilenamelabel(_:)-854y0",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileexporterfilenamelabel(_:)-tb25",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedobject(_:)-708nu",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedobject(_:)-7n9ad",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedsceneobject(_:)-42iof",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedsceneobject(_:)-521mk",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedscenevalue(_:_:)-9wky6",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedscenevalue(_:_:)-vwo4",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedvalue(_:_:)-59199",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/focusedvalue(_:_:)-7qp9i",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gesture(_:)",
                    "title" : "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/help(_:)-249gh",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/help(_:)-5ejhh",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/help(_:)-61wll",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/help(_:)-7af1q",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyboardshortcut(_:)-3b0gl",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyboardshortcut(_:)-iu5r",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linelimit(_:)-1233p",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linelimit(_:)-36urv",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linelimit(_:)-68rr0",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linelimit(_:)-9i0d0",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listitemtint(_:)-5841k",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listitemtint(_:)-7p2vr",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionindexvisibility(_:)",
                    "title" : "func listSectionIndexVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionmargins(_:_:)",
                    "title" : "func listSectionMargins(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionspacing(_:)-7fviz",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/listsectionspacing(_:)-94ljn",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:)-7g10w",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:)-7iwep",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:)-7lvma",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:displaymode:)-24bs4",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:displaymode:)-852fm",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitle(_:displaymode:)-94kuu",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdocument(_:preview:)-1hn80",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdocument(_:preview:)-2tvco",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdocument(_:preview:)-6pk0h",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationdocument(_:preview:)-6upwo",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsubtitle(_:)-2y26d",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsubtitle(_:)-4tuux",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsubtitle(_:)-8xpt1",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationsubtitle(_:)-8zvk4",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-13e3u",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-26lha",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-2zb8f",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-5nix4",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-70ds5",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtitle(_:)-8v38k",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onappintentexecution(_:perform:)",
                    "title" : "func onAppIntentExecution<I>(I.Type, perform: (I) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onchange(of:initial:_:)-2br5u",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onchange(of:initial:_:)-61dlh",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:delegate:)-39fpj",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:delegate:)-8i4vt",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:istargeted:perform:)-5d5xi",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:istargeted:perform:)-5iwyo",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:istargeted:perform:)-64dot",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ondrop(of:istargeted:perform:)-6vp8l",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ongeometrychange(for:of:action:)-3vxjh",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ongeometrychange(for:of:action:)-wcar",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onopenurl(_:)",
                    "title" : "func onOpenURL((URL) -> OpenURLAction.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onscrollphasechange(_:)-15nou",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onscrollphasechange(_:)-4xjvf",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/padding(_:)-6uy5x",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/padding(_:)-80147",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(ispresented:attachmentanchor:arrowedge:content:)-284pz",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(ispresented:attachmentanchor:arrowedge:content:)-2l877",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(ispresented:attachmentanchor:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(item:attachmentanchor:arrowedge:content:)-24djg",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(item:attachmentanchor:arrowedge:content:)-g2yq",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popover(item:attachmentanchor:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popovertip(_:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/renameaction(_:)-63bkj",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/renameaction(_:)-7q7k9",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareabar(edge:alignment:spacing:content:)-2fmre",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareabar(edge:alignment:spacing:content:)-4m6kj",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareainset(edge:alignment:spacing:content:)-3j4tu",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareainset(edge:alignment:spacing:content:)-7f85a",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareapadding(_:)-6okfd",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareapadding(_:)-734f5",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scaleeffect(_:anchor:)-5x4ce",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scaleeffect(_:anchor:)-7ikq4",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-37u61",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5gzb8",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-5i0jf",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-772go",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:placement:prompt:token:)-1m2zk",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:placement:prompt:token:)-360zk",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:placement:prompt:token:)-68yxn",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:editabletokens:placement:prompt:token:)-943ys",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:ispresented:placement:prompt:)-1ktm3",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:ispresented:placement:prompt:)-3isvl",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:ispresented:placement:prompt:)-77w2u",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:ispresented:placement:prompt:)-m00s",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:)-6sa9r",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:)-703wu",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:)-822ci",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:)-8vsdi",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:suggestions:)-30jp6",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:suggestions:)-428ns",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:placement:prompt:suggestions:)-9tdbd",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:ispresented:placement:prompt:token:)-1idbd",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:ispresented:placement:prompt:token:)-36tg4",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:ispresented:placement:prompt:token:)-59tje",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:ispresented:placement:prompt:token:)-98jh",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:placement:prompt:token:)-3s5tm",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:placement:prompt:token:)-6nvgf",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:placement:prompt:token:)-84sjq",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:placement:prompt:token:)-8u92k",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-13zbx",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-29ant",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4x0az",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9oqg4",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-21bye",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-7mrae",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9aimj",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9kcvf",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sectionindexlabel(_:)",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sensoryfeedback(trigger:_:)-68rpm",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sensoryfeedback(trigger:_:)-8jrj",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/shortcutslinkstyle(_:)",
                    "title" : "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/siritipviewstyle(_:)",
                    "title" : "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewbottomaccessory(content:)",
                    "title" : "func tabViewBottomAccessory<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipanchor(_:)",
                    "title" : "func tipAnchor<AnchorID>(AnchorID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipbackground(_:)",
                    "title" : "func tipBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipbackgroundinteraction(_:)",
                    "title" : "func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipcornerradius(_:antialiased:)",
                    "title" : "func tipCornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipimagesize(_:)",
                    "title" : "func tipImageSize(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipimagestyle(_:)",
                    "title" : "func tipImageStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipimagestyle(_:_:)",
                    "title" : "func tipImageStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipimagestyle(_:_:_:)",
                    "title" : "func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tipviewstyle(_:)",
                    "title" : "func tipViewStyle(some TipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbar(content:)-3nkeb",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbar(content:)-5c62f",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typeselectequivalent(_:)-2t7h7",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typeselectequivalent(_:)-4c3hx",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typeselectequivalent(_:)-7a91y",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typeselectequivalent(_:)-8fmsu",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typesettinglanguage(_:isenabled:)-1t393",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/typesettinglanguage(_:isenabled:)-2b2n1",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/horoscopeview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/horoscopeview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/horoscopeview",
            "title" : "HoroscopeView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsview\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/settingsview\/body",
                "title" : "var body: some View",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accentcolor(_:)",
                    "title" : "func accentColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(activationpoint:)-1xly7",
                    "title" : "func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(activationpoint:)-5tv7u",
                    "title" : "func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(addtraits:)",
                    "title" : "func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(hidden:)",
                    "title" : "func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(hint:)",
                    "title" : "func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(identifier:)",
                    "title" : "func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(inputlabels:)",
                    "title" : "func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(label:)",
                    "title" : "func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(removetraits:)",
                    "title" : "func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(selectionidentifier:)",
                    "title" : "func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(sortpriority:)",
                    "title" : "func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibility(value:)",
                    "title" : "func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(_:_:)",
                    "title" : "func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(_:intent:)",
                    "title" : "func accessibilityAction<I>(AccessibilityActionKind, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(action:label:)",
                    "title" : "func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(intent:label:)",
                    "title" : "func accessibilityAction<I, Label>(intent: I, label: () -> Label) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:_:)-1xiwd",
                    "title" : "func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:_:)-2wmtw",
                    "title" : "func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:_:)-78lj2",
                    "title" : "func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:_:)-wctj",
                    "title" : "func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:intent:)-17iyh",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringResource, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:intent:)-40dug",
                    "title" : "func accessibilityAction<I>(named: LocalizedStringKey, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:intent:)-757u7",
                    "title" : "func accessibilityAction<S, I>(named: S, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaction(named:intent:)-9ns30",
                    "title" : "func accessibilityAction<I>(named: Text, intent: I) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactions(_:)",
                    "title" : "func accessibilityActions<Content>(() -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactions(category:_:)",
                    "title" : "func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactivationpoint(_:)-1zl8",
                    "title" : "func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactivationpoint(_:)-3gw1q",
                    "title" : "func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactivationpoint(_:isenabled:)-4w8x0",
                    "title" : "func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityactivationpoint(_:isenabled:)-8wies",
                    "title" : "func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityaddtraits(_:)",
                    "title" : "func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityadjustableaction(_:)",
                    "title" : "func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitychartdescriptor(_:)",
                    "title" : "func accessibilityChartDescriptor<R>(R) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitychildren(children:)",
                    "title" : "func accessibilityChildren<V>(children: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-1cvrz",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-2jfdh",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-2t9ga",
                    "title" : "func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-2vwni",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-59mhj",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-7vz89",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-81nsu",
                    "title" : "func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-8f4hx",
                    "title" : "func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-9a5gk",
                    "title" : "func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-9ewr4",
                    "title" : "func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-9tmrj",
                    "title" : "func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitycustomcontent(_:_:importance:)-ah74",
                    "title" : "func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydefaultfocus(_:_:)",
                    "title" : "func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydirecttouch(_:options:)",
                    "title" : "func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:)-1zmnb",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:)-3wl1c",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:)-4fqf9",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:)-9enuq",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:isenabled:)-18xxq",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:isenabled:)-2o36m",
                    "title" : "func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:isenabled:)-6vlpe",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydragpoint(_:description:isenabled:)-fvkt",
                    "title" : "func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:)-13qgy",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:)-3ynqm",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:)-6s9qp",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:)-pkxo",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:isenabled:)-4ibdg",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:isenabled:)-4uc51",
                    "title" : "func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:isenabled:)-4uq5y",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitydroppoint(_:description:isenabled:)-7x1ot",
                    "title" : "func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityelement(children:)",
                    "title" : "func accessibilityElement(children: AccessibilityChildBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityfocused(_:)",
                    "title" : "func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityfocused(_:equals:)",
                    "title" : "func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityheading(_:)",
                    "title" : "func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhidden(_:)",
                    "title" : "func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhidden(_:isenabled:)",
                    "title" : "func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:)-3mbh0",
                    "title" : "func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:)-40v3f",
                    "title" : "func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:)-43d3h",
                    "title" : "func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:)-8zd2p",
                    "title" : "func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:isenabled:)-4p8sm",
                    "title" : "func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:isenabled:)-7zh6r",
                    "title" : "func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:isenabled:)-8t6la",
                    "title" : "func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityhint(_:isenabled:)-wdkl",
                    "title" : "func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityidentifier(_:)",
                    "title" : "func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityidentifier(_:isenabled:)",
                    "title" : "func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityignoresinvertcolors(_:)",
                    "title" : "func accessibilityIgnoresInvertColors(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:)-1eouo",
                    "title" : "func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:)-8xt11",
                    "title" : "func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:)-ctvc",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:isenabled:)-13u2w",
                    "title" : "func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:isenabled:)-1gms",
                    "title" : "func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityinputlabels(_:isenabled:)-7oorj",
                    "title" : "func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:)-2ghqu",
                    "title" : "func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:)-4da87",
                    "title" : "func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:)-6smiq",
                    "title" : "func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:)-9jy8m",
                    "title" : "func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:isenabled:)-4iehp",
                    "title" : "func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:isenabled:)-4lbms",
                    "title" : "func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:isenabled:)-k4nn",
                    "title" : "func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(_:isenabled:)-vqp5",
                    "title" : "func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabel(content:)",
                    "title" : "func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylabeledpair(role:id:in:)",
                    "title" : "func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitylinkedgroup(id:in:)",
                    "title" : "func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityremovetraits(_:)",
                    "title" : "func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrepresentation(representation:)",
                    "title" : "func accessibilityRepresentation<V>(representation: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrespondstouserinteraction(_:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrespondstouserinteraction(_:isenabled:)",
                    "title" : "func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:)-3pzuo",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:)-6a6rg",
                    "title" : "func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:)-9940",
                    "title" : "func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:)-9nq6s",
                    "title" : "func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:)-mr4p",
                    "title" : "func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4rdln",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-4tlp3",
                    "title" : "func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7ym4p",
                    "title" : "func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8nzdp",
                    "title" : "func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entryid:entrylabel:)-xgdn",
                    "title" : "func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entrylabel:)-1hijo",
                    "title" : "func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entrylabel:)-3enwc",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entrylabel:)-5mnnq",
                    "title" : "func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entrylabel:)-9eo4w",
                    "title" : "func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:entries:entrylabel:)-9rmd1",
                    "title" : "func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:textranges:)-3icl4",
                    "title" : "func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:textranges:)-5ogig",
                    "title" : "func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:textranges:)-5w5gm",
                    "title" : "func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:textranges:)-67ufd",
                    "title" : "func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotor(_:textranges:)-6w9cg",
                    "title" : "func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityrotorentry(id:in:)",
                    "title" : "func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityscrollaction(_:)",
                    "title" : "func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityscrollstatus(_:isenabled:)-21cql",
                    "title" : "func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityscrollstatus(_:isenabled:)-2bqdk",
                    "title" : "func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityscrollstatus(_:isenabled:)-48ztk",
                    "title" : "func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityscrollstatus(_:isenabled:)-7vgi7",
                    "title" : "func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityshowslargecontentviewer()",
                    "title" : "func accessibilityShowsLargeContentViewer() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityshowslargecontentviewer(_:)",
                    "title" : "func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitysortpriority(_:)",
                    "title" : "func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilitytextcontenttype(_:)",
                    "title" : "func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:)-28mn2",
                    "title" : "func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:)-2oylb",
                    "title" : "func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:)-4dj6q",
                    "title" : "func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:)-zf5k",
                    "title" : "func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:isenabled:)-1syh6",
                    "title" : "func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:isenabled:)-5f20j",
                    "title" : "func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:isenabled:)-6r2qf",
                    "title" : "func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityvalue(_:isenabled:)-wcgm",
                    "title" : "func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/accessibilityzoomaction(_:)",
                    "title" : "func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/actionsheet(ispresented:content:)",
                    "title" : "func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/actionsheet(item:content:)",
                    "title" : "func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:)-2qnna",
                    "title" : "func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:)-7czgr",
                    "title" : "func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:)-88aav",
                    "title" : "func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:)-8d9oh",
                    "title" : "func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:message:)-3u9cx",
                    "title" : "func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:message:)-56xe5",
                    "title" : "func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:message:)-7v1lg",
                    "title" : "func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:actions:message:)-8zzrh",
                    "title" : "func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:)-1d2e1",
                    "title" : "func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:)-4vo66",
                    "title" : "func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:)-63hhe",
                    "title" : "func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:)-7xy34",
                    "title" : "func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:message:)-15zb8",
                    "title" : "func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:message:)-3qu9i",
                    "title" : "func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:message:)-6uf5b",
                    "title" : "func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(_:ispresented:presenting:actions:message:)-izyd",
                    "title" : "func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(ispresented:content:)",
                    "title" : "func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(ispresented:error:actions:)",
                    "title" : "func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(ispresented:error:actions:message:)",
                    "title" : "func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/alert(item:content:)",
                    "title" : "func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alignmentguide(_:computevalue:)-3b29v",
                    "title" : "func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alignmentguide(_:computevalue:)-3v1c6",
                    "title" : "func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/alloweddynamicrange(_:)",
                    "title" : "func allowedDynamicRange(Image.DynamicRange?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/allowshittesting(_:)",
                    "title" : "func allowsHitTesting(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/allowstightening(_:)",
                    "title" : "func allowsTightening(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/allowswindowactivationevents()",
                    "title" : "func allowsWindowActivationEvents() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/allowswindowactivationevents(_:)",
                    "title" : "func allowsWindowActivationEvents(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/anchorpreference(key:value:transform:)",
                    "title" : "func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/animation(_:)",
                    "title" : "func animation(Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/animation(_:body:)",
                    "title" : "func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/animation(_:value:)",
                    "title" : "func animation<V>(Animation?, value: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/aspectratio(_:contentmode:)-115cx",
                    "title" : "func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/aspectratio(_:contentmode:)-37ft9",
                    "title" : "func aspectRatio(CGSize, contentMode: ContentMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/assistiveaccessnavigationicon(_:)",
                    "title" : "func assistiveAccessNavigationIcon(Image) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/assistiveaccessnavigationicon(systemimage:)",
                    "title" : "func assistiveAccessNavigationIcon(systemImage: String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/attributedtextformattingdefinition(_:)-67nk4",
                    "title" : "func attributedTextFormattingDefinition<D>(D) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/attributedtextformattingdefinition(_:)-8h0c8",
                    "title" : "func attributedTextFormattingDefinition<S>(S.Type) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/attributedtextformattingdefinition(_:)-8y43s",
                    "title" : "func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/autocapitalization(_:)",
                    "title" : "func autocapitalization(UITextAutocapitalizationType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/autocorrectiondisabled(_:)",
                    "title" : "func autocorrectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/background(_:alignment:)",
                    "title" : "func background<Background>(Background, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(_:ignoressafeareaedges:)",
                    "title" : "func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(_:in:fillstyle:)-4oix0",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(_:in:fillstyle:)-6xjas",
                    "title" : "func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(alignment:content:)",
                    "title" : "func background<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(ignoressafeareaedges:)",
                    "title" : "func background(ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(in:fillstyle:)-3hicv",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/background(in:fillstyle:)-3m4l5",
                    "title" : "func background<S>(in: S, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/backgroundextensioneffect()",
                    "title" : "func backgroundExtensionEffect() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/backgroundextensioneffect(isenabled:)",
                    "title" : "func backgroundExtensionEffect(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/backgroundpreferencevalue(_:_:)",
                    "title" : "func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/backgroundpreferencevalue(_:alignment:_:)",
                    "title" : "func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/backgroundstyle(_:)",
                    "title" : "func backgroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badge(_:)-2rn66",
                    "title" : "func badge(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badge(_:)-3oeb3",
                    "title" : "func badge(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badge(_:)-79ao5",
                    "title" : "func badge<S>(S?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badge(_:)-7pug4",
                    "title" : "func badge(LocalizedStringResource?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badge(_:)-b8xe",
                    "title" : "func badge(LocalizedStringKey?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/badgeprominence(_:)",
                    "title" : "func badgeProminence(BadgeProminence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/baselineoffset(_:)",
                    "title" : "func baselineOffset(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/blendmode(_:)",
                    "title" : "func blendMode(BlendMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/blur(radius:opaque:)",
                    "title" : "func blur(radius: CGFloat, opaque: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/bold(_:)",
                    "title" : "func bold(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/border(_:width:)",
                    "title" : "func border<S>(S, width: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/brightness(_:)",
                    "title" : "func brightness(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/buttonbordershape(_:)",
                    "title" : "func buttonBorderShape(ButtonBorderShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/buttonrepeatbehavior(_:)",
                    "title" : "func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/buttonsizing(_:)",
                    "title" : "func buttonSizing(ButtonSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/buttonstyle(_:)-27o7w",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/buttonstyle(_:)-654f7",
                    "title" : "func buttonStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/clipshape(_:style:)",
                    "title" : "func clipShape<S>(S, style: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/clipped(antialiased:)",
                    "title" : "func clipped(antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/coloreffect(_:isenabled:)",
                    "title" : "func colorEffect(Shader, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/colorinvert()",
                    "title" : "func colorInvert() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/colormultiply(_:)",
                    "title" : "func colorMultiply(Color) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/colorscheme(_:)",
                    "title" : "func colorScheme(ColorScheme) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/compositinggroup()",
                    "title" : "func compositingGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-18yzx",
                    "title" : "func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-1konk",
                    "title" : "func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-6g82j",
                    "title" : "func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8c5cs",
                    "title" : "func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6jarc",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-6nbmz",
                    "title" : "func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-84fs0",
                    "title" : "func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-8gs8i",
                    "title" : "func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-3plog",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-62t6o",
                    "title" : "func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6jl4h",
                    "title" : "func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-e9ih",
                    "title" : "func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1deto",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-3oq1x",
                    "title" : "func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-43vs9",
                    "title" : "func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-7cq2m",
                    "title" : "func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containerbackground(_:for:)",
                    "title" : "func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containerbackground(for:alignment:content:)",
                    "title" : "func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containercorneroffset(_:sizetofit:)",
                    "title" : "func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containerrelativeframe(_:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containerrelativeframe(_:alignment:_:)",
                    "title" : "func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containerrelativeframe(_:count:span:spacing:alignment:)",
                    "title" : "func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containershape(_:)-4odjw",
                    "title" : "func containerShape(some RoundedRectangularShape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containershape(_:)-jlzz",
                    "title" : "func containerShape<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/containervalue(_:_:)",
                    "title" : "func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contentmargins(_:_:for:)-18lih",
                    "title" : "func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contentmargins(_:_:for:)-7uc59",
                    "title" : "func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contentmargins(_:for:)",
                    "title" : "func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contentshape(_:_:eofill:)",
                    "title" : "func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contentshape(_:eofill:)",
                    "title" : "func contentShape<S>(S, eoFill: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contenttoolbar(for:content:)-37iik",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contenttoolbar(for:content:)-40227",
                    "title" : "func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contenttransition(_:)",
                    "title" : "func contentTransition(ContentTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/contextmenu(_:)",
                    "title" : "func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contextmenu(forselectiontype:menu:primaryaction:)",
                    "title" : "func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/contextmenu(menuitems:)",
                    "title" : "func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contextmenu(menuitems:preview:)",
                    "title" : "func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/contrast(_:)",
                    "title" : "func contrast(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/controlgroupstyle(_:)",
                    "title" : "func controlGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/controlsize(_:)",
                    "title" : "func controlSize(ControlSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/coordinatespace(_:)",
                    "title" : "func coordinateSpace(NamedCoordinateSpace) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/coordinatespace(name:)",
                    "title" : "func coordinateSpace<T>(name: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/cornerradius(_:antialiased:)",
                    "title" : "func cornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/datepickerstyle(_:)",
                    "title" : "func datePickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaultadaptabletabbarplacement(_:)",
                    "title" : "func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaultappstorage(_:)",
                    "title" : "func defaultAppStorage(UserDefaults) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaultfocus(_:_:priority:)",
                    "title" : "func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaulthovereffect(_:)",
                    "title" : "func defaultHoverEffect(HoverEffect?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaultscrollanchor(_:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/defaultscrollanchor(_:for:)",
                    "title" : "func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/deferssystemgestures(on:)",
                    "title" : "func defersSystemGestures(on: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/deletedisabled(_:)",
                    "title" : "func deleteDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogicon(_:)",
                    "title" : "func dialogIcon(Image?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogsuppressiontoggle(_:issuppressed:)-5dqbg",
                    "title" : "func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogsuppressiontoggle(_:issuppressed:)-66e34",
                    "title" : "func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogsuppressiontoggle(_:issuppressed:)-6fg2t",
                    "title" : "func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogsuppressiontoggle(_:issuppressed:)-7c5xl",
                    "title" : "func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dialogsuppressiontoggle(issuppressed:)",
                    "title" : "func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/disableautocorrection(_:)",
                    "title" : "func disableAutocorrection(Bool?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/disabled(_:)",
                    "title" : "func disabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/disclosuregroupstyle(_:)",
                    "title" : "func disclosureGroupStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/distortioneffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/documentbrowsercontextmenu(_:)",
                    "title" : "func documentBrowserContextMenu(([URL]?) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dragcontainer(for:id:in:_:)",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, (ItemID) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dragcontainer(for:id:in:selection:_:)-3q5th",
                    "title" : "func dragContainer<Item, ItemID>(for: Item.Type, id: (Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> ItemID?, (ItemID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dragcontainer(for:id:in:selection:_:)-7h6v4",
                    "title" : "func dragContainer<ItemID, Item, Data>(for: Item.Type, id: (consuming Item) -> ItemID, in: Namespace.ID?, selection: @autoclosure () -> Array<ItemID>, (Array<ItemID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dragcontainer(for:in:selection:_:)-3431p",
                    "title" : "func dragContainer<Item>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Item.ID?, (Item.ID) -> Item?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dragcontainer(for:in:selection:_:)-9bygb",
                    "title" : "func dragContainer<Item, Data>(for: Item.Type, in: Namespace.ID?, selection: @autoclosure () -> Array<Item.ID>, (Array<Item.ID>) -> Data) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/draggable(_:)",
                    "title" : "func draggable<T>(@autoclosure () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/draggable(_:preview:)",
                    "title" : "func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/draggable(for:id:_:)",
                    "title" : "func draggable<T, ID>(for: T.Type, id: ID, (ID) -> T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/drawinggroup(opaque:colormode:)",
                    "title" : "func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dropdestination(for:action:istargeted:)",
                    "title" : "func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dropdestination(for:isenabled:action:)",
                    "title" : "func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/dynamictypesize(_:)",
                    "title" : "func dynamicTypeSize(DynamicTypeSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/edgesignoringsafearea(_:)",
                    "title" : "func edgesIgnoringSafeArea(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/environment(_:)",
                    "title" : "func environment<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/environment(_:_:)",
                    "title" : "func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/environmentobject(_:)",
                    "title" : "func environmentObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogbrowseroptions(_:)",
                    "title" : "func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogconfirmationlabel(_:)-2kmhw",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogconfirmationlabel(_:)-2vvhm",
                    "title" : "func fileDialogConfirmationLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogconfirmationlabel(_:)-34hqp",
                    "title" : "func fileDialogConfirmationLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogconfirmationlabel(_:)-mcjy",
                    "title" : "func fileDialogConfirmationLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogcustomizationid(_:)",
                    "title" : "func fileDialogCustomizationID(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogdefaultdirectory(_:)",
                    "title" : "func fileDialogDefaultDirectory(URL?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogimportsunresolvedaliases(_:)",
                    "title" : "func fileDialogImportsUnresolvedAliases(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogmessage(_:)-1e1up",
                    "title" : "func fileDialogMessage(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogmessage(_:)-1qd1d",
                    "title" : "func fileDialogMessage(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogmessage(_:)-4chtj",
                    "title" : "func fileDialogMessage(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogmessage(_:)-4u2cg",
                    "title" : "func fileDialogMessage<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filedialogurlenabled(_:)",
                    "title" : "func fileDialogURLEnabled(Predicate<URL>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-6zcyv",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-9sfm0",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-9lf98",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-olzx",
                    "title" : "func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-7i0f8",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-pkiy",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9qeyu",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-t0pc",
                    "title" : "func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)",
                    "title" : "func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporterfilenamelabel(_:)-3d2g2",
                    "title" : "func fileExporterFilenameLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporterfilenamelabel(_:)-5amu3",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporterfilenamelabel(_:)-94h6f",
                    "title" : "func fileExporterFilenameLabel<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileexporterfilenamelabel(_:)-9a82f",
                    "title" : "func fileExporterFilenameLabel(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)",
                    "title" : "func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filemover(ispresented:file:oncompletion:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filemover(ispresented:file:oncompletion:oncancellation:)",
                    "title" : "func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filemover(ispresented:files:oncompletion:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/filemover(ispresented:files:oncompletion:oncancellation:)",
                    "title" : "func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/finddisabled(_:)",
                    "title" : "func findDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/findnavigator(ispresented:)",
                    "title" : "func findNavigator(isPresented: Binding<Bool>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fixedsize()",
                    "title" : "func fixedSize() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fixedsize(horizontal:vertical:)",
                    "title" : "func fixedSize(horizontal: Bool, vertical: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/flipsforrighttoleftlayoutdirection(_:)",
                    "title" : "func flipsForRightToLeftLayoutDirection(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focuseffectdisabled(_:)",
                    "title" : "func focusEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusable(_:)",
                    "title" : "func focusable(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusable(_:interactions:)",
                    "title" : "func focusable(Bool, interactions: FocusInteractions) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focused(_:)",
                    "title" : "func focused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focused(_:equals:)",
                    "title" : "func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedobject(_:)-7w2n3",
                    "title" : "func focusedObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedobject(_:)-857dl",
                    "title" : "func focusedObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedsceneobject(_:)-8meg5",
                    "title" : "func focusedSceneObject<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedsceneobject(_:)-9pe5g",
                    "title" : "func focusedSceneObject<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedscenevalue(_:)",
                    "title" : "func focusedSceneValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedscenevalue(_:_:)-5en5v",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedscenevalue(_:_:)-9s1dd",
                    "title" : "func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedvalue(_:)",
                    "title" : "func focusedValue<T>(T?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedvalue(_:_:)-3knek",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/focusedvalue(_:_:)-8yuc1",
                    "title" : "func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/font(_:)",
                    "title" : "func font(Font?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fontdesign(_:)",
                    "title" : "func fontDesign(Font.Design?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fontweight(_:)",
                    "title" : "func fontWeight(Font.Weight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fontwidth(_:)",
                    "title" : "func fontWidth(Font.Width?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/foregroundcolor(_:)",
                    "title" : "func foregroundColor(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/foregroundstyle(_:)",
                    "title" : "func foregroundStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/foregroundstyle(_:_:)",
                    "title" : "func foregroundStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/foregroundstyle(_:_:_:)",
                    "title" : "func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/formstyle(_:)",
                    "title" : "func formStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/frame()",
                    "title" : "func frame() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)",
                    "title" : "func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/frame(width:height:alignment:)",
                    "title" : "func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fullscreencover(ispresented:ondismiss:content:)",
                    "title" : "func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/fullscreencover(item:ondismiss:content:)",
                    "title" : "func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gaugestyle(_:)",
                    "title" : "func gaugeStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/geometrygroup()",
                    "title" : "func geometryGroup() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gesture(_:)",
                    "title" : "func gesture(some UIGestureRecognizerRepresentable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gesture(_:including:)",
                    "title" : "func gesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gesture(_:isenabled:)",
                    "title" : "func gesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gesture(_:name:isenabled:)",
                    "title" : "func gesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/glasseffect(_:in:)",
                    "title" : "func glassEffect(Glass, in: some Shape) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/glasseffectid(_:in:)",
                    "title" : "func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/glasseffecttransition(_:)",
                    "title" : "func glassEffectTransition(GlassEffectTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/glasseffectunion(id:namespace:)",
                    "title" : "func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/grayscale(_:)",
                    "title" : "func grayscale(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gridcellanchor(_:)",
                    "title" : "func gridCellAnchor(UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gridcellcolumns(_:)",
                    "title" : "func gridCellColumns(Int) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gridcellunsizedaxes(_:)",
                    "title" : "func gridCellUnsizedAxes(Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/gridcolumnalignment(_:)",
                    "title" : "func gridColumnAlignment(HorizontalAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/groupboxstyle(_:)",
                    "title" : "func groupBoxStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/handgestureshortcut(_:isenabled:)",
                    "title" : "func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/handlesexternalevents(preferring:allowing:)",
                    "title" : "func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/headerprominence(_:)",
                    "title" : "func headerProminence(Prominence) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/help(_:)-3pybs",
                    "title" : "func help(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/help(_:)-4bw46",
                    "title" : "func help<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/help(_:)-6w524",
                    "title" : "func help(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/help(_:)-8p8xh",
                    "title" : "func help(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/hidden()",
                    "title" : "func hidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/highprioritygesture(_:including:)",
                    "title" : "func highPriorityGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/highprioritygesture(_:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/highprioritygesture(_:name:isenabled:)",
                    "title" : "func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/hovereffect(_:)",
                    "title" : "func hoverEffect(HoverEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/hovereffect(_:isenabled:)",
                    "title" : "func hoverEffect(HoverEffect, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/hovereffectdisabled(_:)",
                    "title" : "func hoverEffectDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/huerotation(_:)",
                    "title" : "func hueRotation(Angle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/id(_:)",
                    "title" : "func id<ID>(ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ignoressafearea(_:edges:)",
                    "title" : "func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/imagescale(_:)",
                    "title" : "func imageScale(Image.Scale) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/indexviewstyle(_:)",
                    "title" : "func indexViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/inspector(ispresented:content:)",
                    "title" : "func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/inspectorcolumnwidth(_:)",
                    "title" : "func inspectorColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/inspectorcolumnwidth(min:ideal:max:)",
                    "title" : "func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/interactionactivitytrackingtag(_:)",
                    "title" : "func interactionActivityTrackingTag(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/interactivedismissdisabled(_:)",
                    "title" : "func interactiveDismissDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/invalidatablecontent(_:)",
                    "title" : "func invalidatableContent(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/italic(_:)",
                    "title" : "func italic(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/itemprovider(_:)",
                    "title" : "func itemProvider(Optional<() -> NSItemProvider?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/kerning(_:)",
                    "title" : "func kerning(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyboardshortcut(_:)-2rycu",
                    "title" : "func keyboardShortcut(KeyboardShortcut?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyboardshortcut(_:)-87pww",
                    "title" : "func keyboardShortcut(KeyboardShortcut) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyboardshortcut(_:modifiers:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyboardshortcut(_:modifiers:localization:)",
                    "title" : "func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyboardtype(_:)",
                    "title" : "func keyboardType(UIKeyboardType) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyframeanimator(initialvalue:repeating:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/keyframeanimator(initialvalue:trigger:content:keyframes:)",
                    "title" : "func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labelicontotitlespacing(_:)",
                    "title" : "func labelIconToTitleSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labelreservediconwidth(_:)",
                    "title" : "func labelReservedIconWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labelstyle(_:)",
                    "title" : "func labelStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labeledcontentstyle(_:)",
                    "title" : "func labeledContentStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labelshidden()",
                    "title" : "func labelsHidden() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/labelsvisibility(_:)",
                    "title" : "func labelsVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/layereffect(_:maxsampleoffset:isenabled:)",
                    "title" : "func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/layoutdirectionbehavior(_:)",
                    "title" : "func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/layoutpriority(_:)",
                    "title" : "func layoutPriority(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/layoutvalue(key:value:)",
                    "title" : "func layoutValue<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/lineheight(_:)",
                    "title" : "func lineHeight(AttributedString.LineHeight?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linelimit(_:)-1lqp6",
                    "title" : "func lineLimit(ClosedRange<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linelimit(_:)-96p1l",
                    "title" : "func lineLimit(PartialRangeFrom<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linelimit(_:)-9hhsn",
                    "title" : "func lineLimit(PartialRangeThrough<Int>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linelimit(_:)-9pl3l",
                    "title" : "func lineLimit(Int?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linelimit(_:reservesspace:)",
                    "title" : "func lineLimit(Int, reservesSpace: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/linespacing(_:)",
                    "title" : "func lineSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listitemtint(_:)-2fidl",
                    "title" : "func listItemTint(ListItemTint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listitemtint(_:)-6wkb5",
                    "title" : "func listItemTint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowbackground(_:)",
                    "title" : "func listRowBackground<V>(V?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowinsets(_:)",
                    "title" : "func listRowInsets(EdgeInsets?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowinsets(_:_:)",
                    "title" : "func listRowInsets(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowseparator(_:edges:)",
                    "title" : "func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowseparatortint(_:edges:)",
                    "title" : "func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listrowspacing(_:)",
                    "title" : "func listRowSpacing(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionindexvisibility(_:)",
                    "title" : "func listSectionIndexVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionmargins(_:_:)",
                    "title" : "func listSectionMargins(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionseparator(_:edges:)",
                    "title" : "func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionseparatortint(_:edges:)",
                    "title" : "func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionspacing(_:)-6lbdh",
                    "title" : "func listSectionSpacing(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/listsectionspacing(_:)-7a9nv",
                    "title" : "func listSectionSpacing(ListSectionSpacing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/liststyle(_:)",
                    "title" : "func listStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/luminancetoalpha()",
                    "title" : "func luminanceToAlpha() -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/mask(_:)",
                    "title" : "func mask<Mask>(Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/mask(alignment:_:)",
                    "title" : "func mask<Mask>(alignment: Alignment, () -> Mask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/matchedgeometryeffect(id:in:properties:anchor:issource:)",
                    "title" : "func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/matchedtransitionsource(id:in:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/matchedtransitionsource(id:in:configuration:)",
                    "title" : "func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/materialactiveappearance(_:)",
                    "title" : "func materialActiveAppearance(MaterialActiveAppearance) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/menuactiondismissbehavior(_:)",
                    "title" : "func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/menuindicator(_:)",
                    "title" : "func menuIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/menuorder(_:)",
                    "title" : "func menuOrder(MenuOrder) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/menustyle(_:)",
                    "title" : "func menuStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/minimumscalefactor(_:)",
                    "title" : "func minimumScaleFactor(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/modifier(_:)",
                    "title" : "func modifier<T>(T) -> ModifiedContent<Self, T>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/monospaced(_:)",
                    "title" : "func monospaced(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/monospaceddigit()",
                    "title" : "func monospacedDigit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/movedisabled(_:)",
                    "title" : "func moveDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/multilinetextalignment(_:)",
                    "title" : "func multilineTextAlignment(TextAlignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/multilinetextalignment(strategy:)",
                    "title" : "func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbarbackbuttonhidden(_:)",
                    "title" : "func navigationBarBackButtonHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbarhidden(_:)",
                    "title" : "func navigationBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbaritems(leading:)",
                    "title" : "func navigationBarItems<L>(leading: L) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbaritems(leading:trailing:)",
                    "title" : "func navigationBarItems<L, T>(leading: L, trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbaritems(trailing:)",
                    "title" : "func navigationBarItems<T>(trailing: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:)-17yl5",
                    "title" : "func navigationBarTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:)-4e8a1",
                    "title" : "func navigationBarTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:)-4rcou",
                    "title" : "func navigationBarTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:displaymode:)-23lts",
                    "title" : "func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:displaymode:)-6bumv",
                    "title" : "func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitle(_:displaymode:)-6r6qt",
                    "title" : "func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationbartitledisplaymode(_:)",
                    "title" : "func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdestination(for:destination:)",
                    "title" : "func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdestination(ispresented:destination:)",
                    "title" : "func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdestination(item:destination:)",
                    "title" : "func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdocument(_:)",
                    "title" : "func navigationDocument(URL) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdocument(_:preview:)-2k03t",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdocument(_:preview:)-35juz",
                    "title" : "func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdocument(_:preview:)-8mk33",
                    "title" : "func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationdocument(_:preview:)-98z18",
                    "title" : "func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationlinkindicatorvisibility(_:)",
                    "title" : "func navigationLinkIndicatorVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsplitviewcolumnwidth(_:)",
                    "title" : "func navigationSplitViewColumnWidth(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsplitviewcolumnwidth(min:ideal:max:)",
                    "title" : "func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsplitviewstyle(_:)",
                    "title" : "func navigationSplitViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsubtitle(_:)-2iigl",
                    "title" : "func navigationSubtitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsubtitle(_:)-60vt6",
                    "title" : "func navigationSubtitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsubtitle(_:)-6f7x1",
                    "title" : "func navigationSubtitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationsubtitle(_:)-94tei",
                    "title" : "func navigationSubtitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-29ita",
                    "title" : "func navigationTitle(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-2pejp",
                    "title" : "func navigationTitle(Text) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-55td6",
                    "title" : "func navigationTitle(Binding<String>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-5m89o",
                    "title" : "func navigationTitle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-7ammh",
                    "title" : "func navigationTitle<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtitle(_:)-85g17",
                    "title" : "func navigationTitle(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationtransition(_:)",
                    "title" : "func navigationTransition(some NavigationTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/navigationviewstyle(_:)",
                    "title" : "func navigationViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/offset(_:)",
                    "title" : "func offset(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/offset(x:y:)",
                    "title" : "func offset(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onappintentexecution(_:perform:)",
                    "title" : "func onAppIntentExecution<I>(I.Type, perform: (I) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onappear(perform:)",
                    "title" : "func onAppear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onchange(of:initial:_:)-3p60l",
                    "title" : "func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onchange(of:initial:_:)-4p4vq",
                    "title" : "func onChange<V>(of: V, initial: Bool, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/onchange(of:perform:)",
                    "title" : "func onChange<V>(of: V, perform: (V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/oncontinueuseractivity(_:perform:)",
                    "title" : "func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/oncontinuoushover(coordinatespace:perform:)",
                    "title" : "func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondisappear(perform:)",
                    "title" : "func onDisappear(perform: (() -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrag(_:)",
                    "title" : "func onDrag(() -> NSItemProvider) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrag(_:preview:)",
                    "title" : "func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:delegate:)-9c70q",
                    "title" : "func onDrop(of: [String], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:delegate:)-aqez",
                    "title" : "func onDrop(of: [UTType], delegate: any DropDelegate) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:istargeted:perform:)-3tf8k",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:istargeted:perform:)-7erc3",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:istargeted:perform:)-8epah",
                    "title" : "func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/ondrop(of:istargeted:perform:)-9dxvt",
                    "title" : "func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ongeometrychange(for:of:action:)-19p2",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ongeometrychange(for:of:action:)-21or",
                    "title" : "func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onhover(perform:)",
                    "title" : "func onHover(perform: (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onkeypress(_:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onkeypress(_:phases:action:)",
                    "title" : "func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onkeypress(characters:phases:action:)",
                    "title" : "func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onkeypress(keys:phases:action:)",
                    "title" : "func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onkeypress(phases:action:)",
                    "title" : "func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/onlongpressgesture(minimumduration:pressing:perform:)",
                    "title" : "func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onopenurl(_:)",
                    "title" : "func onOpenURL((URL) -> OpenURLAction.Result) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onopenurl(perform:)",
                    "title" : "func onOpenURL(perform: (URL) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onopenurl(prefersinapp:)",
                    "title" : "func onOpenURL(prefersInApp: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onpencildoubletap(perform:)",
                    "title" : "func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onpencilsqueeze(perform:)",
                    "title" : "func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onpreferencechange(_:perform:)",
                    "title" : "func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onreceive(_:perform:)",
                    "title" : "func onReceive<P>(P, perform: (P.Output) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onscrollgeometrychange(for:of:action:)",
                    "title" : "func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onscrollphasechange(_:)-19v3r",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onscrollphasechange(_:)-1ding",
                    "title" : "func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onscrolltargetvisibilitychange(idtype:threshold:_:)",
                    "title" : "func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onscrollvisibilitychange(threshold:_:)",
                    "title" : "func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/onsubmit(of:_:)",
                    "title" : "func onSubmit(of: SubmitTriggers, () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/ontapgesture(count:coordinatespace:perform:)",
                    "title" : "func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/ontapgesture(count:perform:)",
                    "title" : "func onTapGesture(count: Int, perform: () -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/opacity(_:)",
                    "title" : "func opacity(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/overlay(_:alignment:)",
                    "title" : "func overlay<Overlay>(Overlay, alignment: Alignment) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/overlay(_:ignoressafeareaedges:)",
                    "title" : "func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/overlay(_:in:fillstyle:)",
                    "title" : "func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/overlay(alignment:content:)",
                    "title" : "func overlay<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/overlaypreferencevalue(_:_:)",
                    "title" : "func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/overlaypreferencevalue(_:alignment:_:)",
                    "title" : "func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/padding(_:)-3ezad",
                    "title" : "func padding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/padding(_:)-45689",
                    "title" : "func padding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/padding(_:_:)",
                    "title" : "func padding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/paletteselectioneffect(_:)",
                    "title" : "func paletteSelectionEffect(PaletteSelectionEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/persistentsystemoverlays(_:)",
                    "title" : "func persistentSystemOverlays(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/phaseanimator(_:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/phaseanimator(_:trigger:content:animation:)",
                    "title" : "func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/pickerstyle(_:)",
                    "title" : "func pickerStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(ispresented:attachmentanchor:arrowedge:content:)-87rla",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(ispresented:attachmentanchor:arrowedge:content:)-gmsp",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(ispresented:attachmentanchor:content:)",
                    "title" : "func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(item:attachmentanchor:arrowedge:content:)-1til6",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(item:attachmentanchor:arrowedge:content:)-3w2oq",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popover(item:attachmentanchor:content:)",
                    "title" : "func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popovertip(_:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)",
                    "title" : "func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/position(_:)",
                    "title" : "func position(CGPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/position(x:y:)",
                    "title" : "func position(x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/preference(key:value:)",
                    "title" : "func preference<K>(key: K.Type, value: K.Value) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/preferredcolorscheme(_:)",
                    "title" : "func preferredColorScheme(ColorScheme?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationbackground(_:)",
                    "title" : "func presentationBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationbackground(alignment:content:)",
                    "title" : "func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationbackgroundinteraction(_:)",
                    "title" : "func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationcompactadaptation(_:)",
                    "title" : "func presentationCompactAdaptation(PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationcompactadaptation(horizontal:vertical:)",
                    "title" : "func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationcontentinteraction(_:)",
                    "title" : "func presentationContentInteraction(PresentationContentInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationcornerradius(_:)",
                    "title" : "func presentationCornerRadius(CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationdetents(_:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationdetents(_:selection:)",
                    "title" : "func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationdragindicator(_:)",
                    "title" : "func presentationDragIndicator(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/presentationsizing(_:)",
                    "title" : "func presentationSizing(some PresentationSizing) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/previewcontext(_:)",
                    "title" : "func previewContext<C>(C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/previewdevice(_:)",
                    "title" : "func previewDevice(PreviewDevice?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/previewdisplayname(_:)",
                    "title" : "func previewDisplayName(String?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/previewinterfaceorientation(_:)",
                    "title" : "func previewInterfaceOrientation(InterfaceOrientation) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/previewlayout(_:)",
                    "title" : "func previewLayout(PreviewLayout) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/privacysensitive(_:)",
                    "title" : "func privacySensitive(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/progressviewstyle(_:)",
                    "title" : "func progressViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/projectioneffect(_:)",
                    "title" : "func projectionEffect(ProjectionTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/redacted(reason:)",
                    "title" : "func redacted(reason: RedactionReasons) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/refreshable(action:)",
                    "title" : "func refreshable(action: () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/renameaction(_:)-15vcl",
                    "title" : "func renameAction(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/renameaction(_:)-95khr",
                    "title" : "func renameAction(() -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/replacedisabled(_:)",
                    "title" : "func replaceDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)",
                    "title" : "func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/rotationeffect(_:anchor:)",
                    "title" : "func rotationEffect(Angle, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareabar(edge:alignment:spacing:content:)-2wisc",
                    "title" : "func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareabar(edge:alignment:spacing:content:)-8z5lt",
                    "title" : "func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareainset(edge:alignment:spacing:content:)-25mn2",
                    "title" : "func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareainset(edge:alignment:spacing:content:)-76y1f",
                    "title" : "func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareapadding(_:)-1v4iu",
                    "title" : "func safeAreaPadding(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareapadding(_:)-5jknj",
                    "title" : "func safeAreaPadding(EdgeInsets) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/safeareapadding(_:_:)",
                    "title" : "func safeAreaPadding(Edge.Set, CGFloat?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/saturation(_:)",
                    "title" : "func saturation(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scaleeffect(_:anchor:)-3164t",
                    "title" : "func scaleEffect(CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scaleeffect(_:anchor:)-6lr6e",
                    "title" : "func scaleEffect(CGSize, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scaleeffect(x:y:anchor:)",
                    "title" : "func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scaledtofill()",
                    "title" : "func scaledToFill() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scaledtofit()",
                    "title" : "func scaledToFit() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scenepadding(_:)",
                    "title" : "func scenePadding(Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scenepadding(_:edges:)",
                    "title" : "func scenePadding(ScenePadding, edges: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollbouncebehavior(_:axes:)",
                    "title" : "func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollclipdisabled(_:)",
                    "title" : "func scrollClipDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollcontentbackground(_:)",
                    "title" : "func scrollContentBackground(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolldisabled(_:)",
                    "title" : "func scrollDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolldismisseskeyboard(_:)",
                    "title" : "func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolledgeeffecthidden(_:for:)",
                    "title" : "func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolledgeeffectstyle(_:for:)",
                    "title" : "func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollindicators(_:axes:)",
                    "title" : "func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollindicatorsflash(onappear:)",
                    "title" : "func scrollIndicatorsFlash(onAppear: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollindicatorsflash(trigger:)",
                    "title" : "func scrollIndicatorsFlash(trigger: some Equatable) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollinputbehavior(_:for:)",
                    "title" : "func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollposition(_:anchor:)",
                    "title" : "func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrollposition(id:anchor:)",
                    "title" : "func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolltargetbehavior(_:)",
                    "title" : "func scrollTargetBehavior(some ScrollTargetBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolltargetlayout(isenabled:)",
                    "title" : "func scrollTargetLayout(isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolltransition(_:axis:transition:)",
                    "title" : "func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/scrolltransition(topleading:bottomtrailing:axis:transition:)",
                    "title" : "func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchcompletion(_:)",
                    "title" : "func searchCompletion(String) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchdictationbehavior(_:)",
                    "title" : "func searchDictationBehavior(TextInputDictationBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchfocused(_:)",
                    "title" : "func searchFocused(FocusState<Bool>.Binding) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchfocused(_:equals:)",
                    "title" : "func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchpresentationtoolbarbehavior(_:)",
                    "title" : "func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchscopes(_:activation:_:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchscopes(_:scopes:)",
                    "title" : "func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchselection(_:)",
                    "title" : "func searchSelection(Binding<TextSelection?>) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchsuggestions(_:)",
                    "title" : "func searchSuggestions<S>(() -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchsuggestions(_:for:)",
                    "title" : "func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchtoolbarbehavior(_:)",
                    "title" : "func searchToolbarBehavior(SearchToolbarBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-1g88",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3c4aj",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-4xe4e",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-9k70a",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:placement:prompt:token:)-6otr4",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:placement:prompt:token:)-6zk4i",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:placement:prompt:token:)-9qtdi",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:editabletokens:placement:prompt:token:)-mju5",
                    "title" : "func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:ispresented:placement:prompt:)-48kff",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:ispresented:placement:prompt:)-5bp5x",
                    "title" : "func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:ispresented:placement:prompt:)-9m16c",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:ispresented:placement:prompt:)-9rwi3",
                    "title" : "func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:)-2l97m",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:)-52p0t",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:)-5pquv",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:)-8l01f",
                    "title" : "func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:suggestions:)-7e05v",
                    "title" : "func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:suggestions:)-7z52k",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:placement:prompt:suggestions:)-8t7fn",
                    "title" : "func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-40tqi",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-5c783",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6guhk",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:ispresented:placement:prompt:token:)-74nsv",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:placement:prompt:token:)-3ihoh",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:placement:prompt:token:)-4k0lk",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:placement:prompt:token:)-7coyk",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:placement:prompt:token:)-7o10",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3a4s6",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-856n5",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9kw72",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-rtnc",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-21i8d",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3oxex",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-6vo1h",
                    "title" : "func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-76hed",
                    "title" : "func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sectionactions(content:)",
                    "title" : "func sectionActions<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sectionindexlabel(_:)",
                    "title" : "func sectionIndexLabel(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/selectiondisabled(_:)",
                    "title" : "func selectionDisabled(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sensoryfeedback(_:trigger:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sensoryfeedback(_:trigger:condition:)",
                    "title" : "func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sensoryfeedback(trigger:_:)-25apw",
                    "title" : "func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sensoryfeedback(trigger:_:)-4t9uc",
                    "title" : "func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/shadow(color:radius:x:y:)",
                    "title" : "func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sheet(ispresented:ondismiss:content:)",
                    "title" : "func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sheet(item:ondismiss:content:)",
                    "title" : "func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/shortcutslinkstyle(_:)",
                    "title" : "func shortcutsLinkStyle(ShortcutsLinkStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/simultaneousgesture(_:including:)",
                    "title" : "func simultaneousGesture<T>(T, including: GestureMask) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/simultaneousgesture(_:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/simultaneousgesture(_:name:isenabled:)",
                    "title" : "func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/siritipviewstyle(_:)",
                    "title" : "func siriTipViewStyle(SiriTipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/sliderthumbvisibility(_:)",
                    "title" : "func sliderThumbVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/speechadjustedpitch(_:)",
                    "title" : "func speechAdjustedPitch(Double) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/speechalwaysincludespunctuation(_:)",
                    "title" : "func speechAlwaysIncludesPunctuation(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/speechannouncementsqueued(_:)",
                    "title" : "func speechAnnouncementsQueued(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/speechspellsoutcharacters(_:)",
                    "title" : "func speechSpellsOutCharacters(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/springloadingbehavior(_:)",
                    "title" : "func springLoadingBehavior(SpringLoadingBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/statusbar(hidden:)",
                    "title" : "func statusBar(hidden: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/statusbarhidden(_:)",
                    "title" : "func statusBarHidden(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/strikethrough(_:pattern:color:)",
                    "title" : "func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/submitlabel(_:)",
                    "title" : "func submitLabel(SubmitLabel) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/submitscope(_:)",
                    "title" : "func submitScope(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/swipeactions(edge:allowsfullswipe:content:)",
                    "title" : "func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symbolcolorrenderingmode(_:)",
                    "title" : "func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symboleffect(_:options:isactive:)",
                    "title" : "func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symboleffect(_:options:value:)",
                    "title" : "func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symboleffectsremoved(_:)",
                    "title" : "func symbolEffectsRemoved(Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symbolrenderingmode(_:)",
                    "title" : "func symbolRenderingMode(SymbolRenderingMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symbolvariablevaluemode(_:)",
                    "title" : "func symbolVariableValueMode(SymbolVariableValueMode?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/symbolvariant(_:)",
                    "title" : "func symbolVariant(SymbolVariants) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabbarminimizebehavior(_:)",
                    "title" : "func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/tabitem(_:)",
                    "title" : "func tabItem<V>(() -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewbottomaccessory(content:)",
                    "title" : "func tabViewBottomAccessory<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewcustomization(_:)",
                    "title" : "func tabViewCustomization(Binding<TabViewCustomization>?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewsidebarbottombar(content:)",
                    "title" : "func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewsidebarfooter(content:)",
                    "title" : "func tabViewSidebarFooter<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewsidebarheader(content:)",
                    "title" : "func tabViewSidebarHeader<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tabviewstyle(_:)",
                    "title" : "func tabViewStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tablecolumnheaders(_:)",
                    "title" : "func tableColumnHeaders(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tablestyle(_:)",
                    "title" : "func tableStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tag(_:)",
                    "title" : "func tag<V>(V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tag(_:includeoptional:)",
                    "title" : "func tag<V>(V, includeOptional: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/task(id:priority:_:)",
                    "title" : "func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/task(priority:_:)",
                    "title" : "func task(priority: TaskPriority, () async -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textcase(_:)",
                    "title" : "func textCase(Text.Case?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textcontenttype(_:)",
                    "title" : "func textContentType(UITextContentType?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/texteditorstyle(_:)",
                    "title" : "func textEditorStyle(some TextEditorStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textfieldstyle(_:)",
                    "title" : "func textFieldStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textinputautocapitalization(_:)",
                    "title" : "func textInputAutocapitalization(TextInputAutocapitalization?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textinputformattingcontrolvisibility(_:for:)",
                    "title" : "func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textrenderer(_:)",
                    "title" : "func textRenderer<T>(T) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textscale(_:isenabled:)",
                    "title" : "func textScale(Text.Scale, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textselection(_:)",
                    "title" : "func textSelection<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/textselectionaffinity(_:)",
                    "title" : "func textSelectionAffinity(TextSelectionAffinity) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tint(_:)",
                    "title" : "func tint(Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipanchor(_:)",
                    "title" : "func tipAnchor<AnchorID>(AnchorID) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipbackground(_:)",
                    "title" : "func tipBackground<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipbackgroundinteraction(_:)",
                    "title" : "func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipcornerradius(_:antialiased:)",
                    "title" : "func tipCornerRadius(CGFloat, antialiased: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipimagesize(_:)",
                    "title" : "func tipImageSize(CGSize) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipimagestyle(_:)",
                    "title" : "func tipImageStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipimagestyle(_:_:)",
                    "title" : "func tipImageStyle<S1, S2>(S1, S2) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipimagestyle(_:_:_:)",
                    "title" : "func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tipviewstyle(_:)",
                    "title" : "func tipViewStyle(some TipViewStyle) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/togglestyle(_:)",
                    "title" : "func toggleStyle<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbar(_:for:)",
                    "title" : "func toolbar(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbar(content:)-5q363",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbar(content:)-zung",
                    "title" : "func toolbar<Content>(content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbar(id:content:)",
                    "title" : "func toolbar<Content>(id: String, content: () -> Content) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbar(removing:)",
                    "title" : "func toolbar(removing: ToolbarDefaultItemKind?) -> some View",
                    "type" : "method"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarbackground(_:for:)",
                    "title" : "func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarbackgroundvisibility(_:for:)",
                    "title" : "func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarcolorscheme(_:for:)",
                    "title" : "func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarforegroundstyle(_:for:)",
                    "title" : "func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarrole(_:)",
                    "title" : "func toolbarRole(ToolbarRole) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbartitledisplaymode(_:)",
                    "title" : "func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbartitlemenu(content:)",
                    "title" : "func toolbarTitleMenu<C>(content: () -> C) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/toolbarvisibility(_:for:)",
                    "title" : "func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/tracking(_:)",
                    "title" : "func tracking(CGFloat) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transaction(_:)",
                    "title" : "func transaction((inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transaction(_:body:)",
                    "title" : "func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transaction(value:_:)",
                    "title" : "func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transformanchorpreference(key:value:transform:)",
                    "title" : "func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transformeffect(_:)",
                    "title" : "func transformEffect(CGAffineTransform) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transformenvironment(_:transform:)",
                    "title" : "func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transformpreference(_:_:)",
                    "title" : "func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/transition(_:)",
                    "title" : "func transition(AnyTransition) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/truncationmode(_:)",
                    "title" : "func truncationMode(Text.TruncationMode) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typeselectequivalent(_:)-52dth",
                    "title" : "func typeSelectEquivalent(Text?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typeselectequivalent(_:)-74aus",
                    "title" : "func typeSelectEquivalent(LocalizedStringKey) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typeselectequivalent(_:)-7cro6",
                    "title" : "func typeSelectEquivalent(LocalizedStringResource) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typeselectequivalent(_:)-7tml6",
                    "title" : "func typeSelectEquivalent<S>(S) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typesettinglanguage(_:isenabled:)-49i8l",
                    "title" : "func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/typesettinglanguage(_:isenabled:)-9rpqp",
                    "title" : "func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/underline(_:pattern:color:)",
                    "title" : "func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/unredacted()",
                    "title" : "func unredacted() -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/useractivity(_:element:_:)",
                    "title" : "func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/useractivity(_:isactive:_:)",
                    "title" : "func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/visualeffect(_:)",
                    "title" : "func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/windowtoolbarfullscreenvisibility(_:)",
                    "title" : "func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/writingdirection(strategy:)",
                    "title" : "func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/writingtoolsaffordancevisibility(_:)",
                    "title" : "func writingToolsAffordanceVisibility(Visibility) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/writingtoolsbehavior(_:)",
                    "title" : "func writingToolsBehavior(WritingToolsBehavior) -> some View",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/settingsview\/zindex(_:)",
                    "title" : "func zIndex(Double) -> some View",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/horoscope\/settingsview\/view-implementations",
                "title" : "View Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/settingsview",
            "title" : "SettingsView",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/sharetip\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/sharetip\/message",
                "title" : "let message: Text?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/sharetip\/title",
                "title" : "let title: Text",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/shoulddisplay",
                    "title" : "var shouldDisplay: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/shoulddisplayupdates",
                    "title" : "var shouldDisplayUpdates: AsyncMapSequence<AsyncStream<Self.Status>, Bool>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/status-swift.property",
                    "title" : "var status: Self.Status",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/statusupdates",
                    "title" : "var statusUpdates: AsyncStream<Self.Status>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/invalidate(reason:)",
                    "title" : "func invalidate(reason: Self.InvalidationReason)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/reseteligibility()",
                    "title" : "func resetEligibility() async",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/action",
                    "title" : "ShareTip.Action",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/event",
                    "title" : "ShareTip.Event",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/ignoresdisplayfrequency",
                    "title" : "ShareTip.IgnoresDisplayFrequency",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/invalidationreason",
                    "title" : "ShareTip.InvalidationReason",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/maxdisplaycount",
                    "title" : "ShareTip.MaxDisplayCount",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/maxdisplayduration",
                    "title" : "ShareTip.MaxDisplayDuration",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/option",
                    "title" : "ShareTip.Option",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/rule",
                    "title" : "ShareTip.Rule",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/sharetip\/status-swift.typealias",
                    "title" : "ShareTip.Status",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/horoscope\/sharetip\/tip-implementations",
                "title" : "Tip Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/sharetip",
            "title" : "ShareTip",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/usernametip\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/horoscope\/usernametip\/message",
                "title" : "let message: Text?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/horoscope\/usernametip\/title",
                "title" : "let title: Text",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/shoulddisplay",
                    "title" : "var shouldDisplay: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/shoulddisplayupdates",
                    "title" : "var shouldDisplayUpdates: AsyncMapSequence<AsyncStream<Self.Status>, Bool>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/status-swift.property",
                    "title" : "var status: Self.Status",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/statusupdates",
                    "title" : "var statusUpdates: AsyncStream<Self.Status>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/invalidate(reason:)",
                    "title" : "func invalidate(reason: Self.InvalidationReason)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/reseteligibility()",
                    "title" : "func resetEligibility() async",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/action",
                    "title" : "UsernameTip.Action",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/event",
                    "title" : "UsernameTip.Event",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/ignoresdisplayfrequency",
                    "title" : "UsernameTip.IgnoresDisplayFrequency",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/invalidationreason",
                    "title" : "UsernameTip.InvalidationReason",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/maxdisplaycount",
                    "title" : "UsernameTip.MaxDisplayCount",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/maxdisplayduration",
                    "title" : "UsernameTip.MaxDisplayDuration",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/option",
                    "title" : "UsernameTip.Option",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/rule",
                    "title" : "UsernameTip.Rule",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/usernametip\/status-swift.typealias",
                    "title" : "UsernameTip.Status",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/horoscope\/usernametip\/tip-implementations",
                "title" : "Tip Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/horoscope\/usernametip",
            "title" : "UsernameTip",
            "type" : "struct"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/allownotifications",
                    "title" : "static var allowNotifications: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/appleintelligencenotenabled",
                    "title" : "static var appleIntelligenceNotEnabled: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/devicenoteligible",
                    "title" : "static var deviceNotEligible: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/fordevelopers",
                    "title" : "static var forDevelopers: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/generate",
                    "title" : "static var generate: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/generateahoroscope",
                    "title" : "static var generateAHoroscope: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/generatesahoroscope",
                    "title" : "static var generatesAHoroscope: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/generatinghoroscope",
                    "title" : "static var generatingHoroscope: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/githubusername",
                    "title" : "static var githubUsername: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/horoscope",
                    "title" : "static var horoscope: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/modelnotready",
                    "title" : "static var modelNotReady: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/notifications",
                    "title" : "static var notifications: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/notificationsdenied",
                    "title" : "static var notificationsDenied: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/opensettings",
                    "title" : "static var openSettings: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/settings",
                    "title" : "static var settings: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/sharetipmessage",
                    "title" : "static var shareTipMessage: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/sharingtiptitle",
                    "title" : "static var sharingTipTitle: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/time",
                    "title" : "static var time: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/unknownreason",
                    "title" : "static var unknownReason: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/usernametipmessage",
                    "title" : "static var usernameTipMessage: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/usernametiptitle",
                    "title" : "static var usernameTipTitle: LocalizedStringResource",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource\/yourhoroscopesign",
                    "title" : "static var yourHoroscopeSign: LocalizedStringResource",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/horoscope\/foundation\/localizedstringresource",
                "title" : "LocalizedStringResource",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/horoscope\/foundation",
            "title" : "Foundation",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/horoscope",
        "title" : "Horoscope",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}